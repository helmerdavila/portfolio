# Add date formatting options.
directive @dateformat(
  formatString: String
  locale: String
  fromNow: Boolean
  difference: String
) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(
  by: String! = "id"
  from: String
  on: String
) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp

  # Returns all children nodes filtered by type Mdx
  childrenMdx: [Mdx]

  # Returns the first child node of type Mdx or null if there are no children of given type on this node
  childMdx: Mdx

  # Returns all children nodes filtered by type TranslationsJson
  childrenTranslationsJson: [TranslationsJson]

  # Returns the first child node of type TranslationsJson or null if there are no children of given type on this node
  childTranslationsJson: TranslationsJson
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
  contentFilePath: String
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  polyfill: Boolean
  pathPrefix: String
  jsxRuntime: String
  trailingSlash: String
  graphqlTypegen: Boolean
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteSiteMetadata {
  title: String
  description: String
  author: String
  siteUrl: String
}

type SiteFunction implements Node {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  pageContext: JSON
  pluginCreator: SitePlugin
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

type SitePlugin implements Node {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: JSON
  packageJson: JSON
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteBuildMetadata implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

enum GatsbyImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum GatsbyImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum GatsbyImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node {
  fixed(
    width: Int
    height: Int
    base64Width: Int
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    grayscale: Boolean = false
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
  ): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String
  ): GatsbyImageData!
  original: ImageSharpOriginal
  resize(
    width: Int
    height: Int
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    jpegProgressive: Boolean = true
    pngCompressionLevel: Int = 9
    pngCompressionSpeed: Int = 4
    grayscale: Boolean = false
    duotone: DuotoneGradient
    base64: Boolean = false
    traceSVG: Potrace
    toFormat: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
  ): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

scalar GatsbyImageData

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type MdxFrontmatter {
  title: String!
  description: String
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  published: Boolean
  image: File
  imageAlt: String
  embeddedImagesLocal: [File]
  imageCover: String
}

type MdxHeadingMdx {
  value: String
  depth: Int
}

enum HeadingsMdx {
  h1
  h2
  h3
  h4
  h5
  h6
}

type MdxWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type Mdx implements Node {
  rawBody: String!
  fileAbsolutePath: String!
  frontmatter: MdxFrontmatter
  slug: String
  body: String!
  excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
  headings(depth: HeadingsMdx): [MdxHeadingMdx]
  html: String
  mdxAST: JSON
  tableOfContents(maxDepth: Int): JSON
  timeToRead: Int
  wordCount: MdxWordCount
  fields: MdxFields
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type MdxFields {
  localizedSlug: String
  slug: String
  locale: String
  isDefault: Boolean
}

type TranslationsJson implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  author: String
  about_me: String
  about_me_description: String
  and_i_build: String
  battleship_description: String
  code_samples: String
  ctbook_description: String
  ctbook_readsample: String
  cv_link: String
  download_cv: String
  ecommerce_websites: String
  edit_posts_on_github: String
  hi_my_name_is: String
  landing_pages: String
  mobile_and_web_projects: String
  mobile_applications: String
  my_stack: String
  my_stack_backend: String
  my_stack_frontend: String
  my_stack_sysops: String
  personal_projects_httpixel: String
  personal_projects_pills: String
  powered_by_gatsby: String
  projects: String
  roomie_description: String
  software_engineer: String
  web_applications: String
  what_i_do: String
  what_i_do_backend: String
  what_i_do_frontend: String
  what_i_do_mobile: String
  what_i_do_sysops: String
  who_am_i: String
  written_by: String
}

type Query {
  file(
    sourceInstanceName: StringQueryOperatorInput
    absolutePath: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    size: IntQueryOperatorInput
    prettySize: StringQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    accessTime: DateQueryOperatorInput
    changeTime: DateQueryOperatorInput
    birthTime: DateQueryOperatorInput
    root: StringQueryOperatorInput
    dir: StringQueryOperatorInput
    base: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    name: StringQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    dev: IntQueryOperatorInput
    mode: IntQueryOperatorInput
    nlink: IntQueryOperatorInput
    uid: IntQueryOperatorInput
    gid: IntQueryOperatorInput
    rdev: IntQueryOperatorInput
    ino: FloatQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    atime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    ctime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    publicURL: StringQueryOperatorInput
    childrenImageSharp: ImageSharpFilterListInput
    childImageSharp: ImageSharpFilterInput
    childrenMdx: MdxFilterListInput
    childMdx: MdxFilterInput
    childrenTranslationsJson: TranslationsJsonFilterListInput
    childTranslationsJson: TranslationsJsonFilterInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): File
  allFile(
    filter: FileFilterInput
    sort: FileSortInput
    skip: Int
    limit: Int
  ): FileConnection!
  directory(
    sourceInstanceName: StringQueryOperatorInput
    absolutePath: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    size: IntQueryOperatorInput
    prettySize: StringQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    accessTime: DateQueryOperatorInput
    changeTime: DateQueryOperatorInput
    birthTime: DateQueryOperatorInput
    root: StringQueryOperatorInput
    dir: StringQueryOperatorInput
    base: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    name: StringQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    dev: IntQueryOperatorInput
    mode: IntQueryOperatorInput
    nlink: IntQueryOperatorInput
    uid: IntQueryOperatorInput
    gid: IntQueryOperatorInput
    rdev: IntQueryOperatorInput
    ino: FloatQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    atime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    ctime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): Directory
  allDirectory(
    filter: DirectoryFilterInput
    sort: DirectorySortInput
    skip: Int
    limit: Int
  ): DirectoryConnection!
  site(
    buildTime: DateQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
    port: IntQueryOperatorInput
    host: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    pathPrefix: StringQueryOperatorInput
    jsxRuntime: StringQueryOperatorInput
    trailingSlash: StringQueryOperatorInput
    graphqlTypegen: BooleanQueryOperatorInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): Site
  allSite(
    filter: SiteFilterInput
    sort: SiteSortInput
    skip: Int
    limit: Int
  ): SiteConnection!
  siteFunction(
    functionRoute: StringQueryOperatorInput
    pluginName: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
    absoluteCompiledFilePath: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): SiteFunction
  allSiteFunction(
    filter: SiteFunctionFilterInput
    sort: SiteFunctionSortInput
    skip: Int
    limit: Int
  ): SiteFunctionConnection!
  sitePage(
    path: StringQueryOperatorInput
    component: StringQueryOperatorInput
    internalComponentName: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): SitePage
  allSitePage(
    filter: SitePageFilterInput
    sort: SitePageSortInput
    skip: Int
    limit: Int
  ): SitePageConnection!
  sitePlugin(
    resolve: StringQueryOperatorInput
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    browserAPIs: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): SitePlugin
  allSitePlugin(
    filter: SitePluginFilterInput
    sort: SitePluginSortInput
    skip: Int
    limit: Int
  ): SitePluginConnection!
  siteBuildMetadata(
    buildTime: DateQueryOperatorInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): SiteBuildMetadata
  allSiteBuildMetadata(
    filter: SiteBuildMetadataFilterInput
    sort: SiteBuildMetadataSortInput
    skip: Int
    limit: Int
  ): SiteBuildMetadataConnection!
  imageSharp(
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: GatsbyImageDataQueryOperatorInput
    original: ImageSharpOriginalFilterInput
    resize: ImageSharpResizeFilterInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): ImageSharp
  allImageSharp(
    filter: ImageSharpFilterInput
    sort: ImageSharpSortInput
    skip: Int
    limit: Int
  ): ImageSharpConnection!
  mdx(
    rawBody: StringQueryOperatorInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MdxFrontmatterFilterInput
    slug: StringQueryOperatorInput
    body: StringQueryOperatorInput
    excerpt: StringQueryOperatorInput
    headings: MdxHeadingMdxFilterListInput
    html: StringQueryOperatorInput
    mdxAST: JSONQueryOperatorInput
    tableOfContents: JSONQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MdxWordCountFilterInput
    fields: MdxFieldsFilterInput
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
  ): Mdx
  allMdx(
    filter: MdxFilterInput
    sort: MdxSortInput
    skip: Int
    limit: Int
  ): MdxConnection!
  translationsJson(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    author: StringQueryOperatorInput
    about_me: StringQueryOperatorInput
    about_me_description: StringQueryOperatorInput
    and_i_build: StringQueryOperatorInput
    battleship_description: StringQueryOperatorInput
    code_samples: StringQueryOperatorInput
    ctbook_description: StringQueryOperatorInput
    ctbook_readsample: StringQueryOperatorInput
    cv_link: StringQueryOperatorInput
    download_cv: StringQueryOperatorInput
    ecommerce_websites: StringQueryOperatorInput
    edit_posts_on_github: StringQueryOperatorInput
    hi_my_name_is: StringQueryOperatorInput
    landing_pages: StringQueryOperatorInput
    mobile_and_web_projects: StringQueryOperatorInput
    mobile_applications: StringQueryOperatorInput
    my_stack: StringQueryOperatorInput
    my_stack_backend: StringQueryOperatorInput
    my_stack_frontend: StringQueryOperatorInput
    my_stack_sysops: StringQueryOperatorInput
    personal_projects_httpixel: StringQueryOperatorInput
    personal_projects_pills: StringQueryOperatorInput
    powered_by_gatsby: StringQueryOperatorInput
    projects: StringQueryOperatorInput
    roomie_description: StringQueryOperatorInput
    software_engineer: StringQueryOperatorInput
    web_applications: StringQueryOperatorInput
    what_i_do: StringQueryOperatorInput
    what_i_do_backend: StringQueryOperatorInput
    what_i_do_frontend: StringQueryOperatorInput
    what_i_do_mobile: StringQueryOperatorInput
    what_i_do_sysops: StringQueryOperatorInput
    who_am_i: StringQueryOperatorInput
    written_by: StringQueryOperatorInput
  ): TranslationsJson
  allTranslationsJson(
    filter: TranslationsJsonFilterInput
    sort: TranslationsJsonSortInput
    skip: Int
    limit: Int
  ): TranslationsJsonConnection!
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: GatsbyImageDataQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input GatsbyImageDataQueryOperatorInput {
  eq: GatsbyImageData
  ne: GatsbyImageData
  in: [GatsbyImageData]
  nin: [GatsbyImageData]
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
  contentFilePath: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

input MdxFilterListInput {
  elemMatch: MdxFilterInput
}

input MdxFilterInput {
  rawBody: StringQueryOperatorInput
  fileAbsolutePath: StringQueryOperatorInput
  frontmatter: MdxFrontmatterFilterInput
  slug: StringQueryOperatorInput
  body: StringQueryOperatorInput
  excerpt: StringQueryOperatorInput
  headings: MdxHeadingMdxFilterListInput
  html: StringQueryOperatorInput
  mdxAST: JSONQueryOperatorInput
  tableOfContents: JSONQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: MdxWordCountFilterInput
  fields: MdxFieldsFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input MdxFrontmatterFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  date: DateQueryOperatorInput
  published: BooleanQueryOperatorInput
  image: FileFilterInput
  imageAlt: StringQueryOperatorInput
  embeddedImagesLocal: FileFilterListInput
  imageCover: StringQueryOperatorInput
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  childrenMdx: MdxFilterListInput
  childMdx: MdxFilterInput
  childrenTranslationsJson: TranslationsJsonFilterListInput
  childTranslationsJson: TranslationsJsonFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input TranslationsJsonFilterListInput {
  elemMatch: TranslationsJsonFilterInput
}

input TranslationsJsonFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  author: StringQueryOperatorInput
  about_me: StringQueryOperatorInput
  about_me_description: StringQueryOperatorInput
  and_i_build: StringQueryOperatorInput
  battleship_description: StringQueryOperatorInput
  code_samples: StringQueryOperatorInput
  ctbook_description: StringQueryOperatorInput
  ctbook_readsample: StringQueryOperatorInput
  cv_link: StringQueryOperatorInput
  download_cv: StringQueryOperatorInput
  ecommerce_websites: StringQueryOperatorInput
  edit_posts_on_github: StringQueryOperatorInput
  hi_my_name_is: StringQueryOperatorInput
  landing_pages: StringQueryOperatorInput
  mobile_and_web_projects: StringQueryOperatorInput
  mobile_applications: StringQueryOperatorInput
  my_stack: StringQueryOperatorInput
  my_stack_backend: StringQueryOperatorInput
  my_stack_frontend: StringQueryOperatorInput
  my_stack_sysops: StringQueryOperatorInput
  personal_projects_httpixel: StringQueryOperatorInput
  personal_projects_pills: StringQueryOperatorInput
  powered_by_gatsby: StringQueryOperatorInput
  projects: StringQueryOperatorInput
  roomie_description: StringQueryOperatorInput
  software_engineer: StringQueryOperatorInput
  web_applications: StringQueryOperatorInput
  what_i_do: StringQueryOperatorInput
  what_i_do_backend: StringQueryOperatorInput
  what_i_do_frontend: StringQueryOperatorInput
  what_i_do_mobile: StringQueryOperatorInput
  what_i_do_sysops: StringQueryOperatorInput
  who_am_i: StringQueryOperatorInput
  written_by: StringQueryOperatorInput
}

input FileFilterListInput {
  elemMatch: FileFilterInput
}

input MdxHeadingMdxFilterListInput {
  elemMatch: MdxHeadingMdxFilterInput
}

input MdxHeadingMdxFilterInput {
  value: StringQueryOperatorInput
  depth: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input MdxWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

input MdxFieldsFilterInput {
  localizedSlug: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  isDefault: BooleanQueryOperatorInput
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  publicURL
  childrenImageSharp
  childrenImageSharp___fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___original___width
  childrenImageSharp___original___height
  childrenImageSharp___original___src
  childrenImageSharp___resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___id
  childrenImageSharp___parent___id
  childrenImageSharp___parent___parent___id
  childrenImageSharp___parent___parent___children
  childrenImageSharp___parent___children
  childrenImageSharp___parent___children___id
  childrenImageSharp___parent___children___children
  childrenImageSharp___parent___internal___content
  childrenImageSharp___parent___internal___contentDigest
  childrenImageSharp___parent___internal___description
  childrenImageSharp___parent___internal___fieldOwners
  childrenImageSharp___parent___internal___ignoreType
  childrenImageSharp___parent___internal___mediaType
  childrenImageSharp___parent___internal___owner
  childrenImageSharp___parent___internal___type
  childrenImageSharp___parent___internal___contentFilePath
  childrenImageSharp___children
  childrenImageSharp___children___id
  childrenImageSharp___children___parent___id
  childrenImageSharp___children___parent___children
  childrenImageSharp___children___children
  childrenImageSharp___children___children___id
  childrenImageSharp___children___children___children
  childrenImageSharp___children___internal___content
  childrenImageSharp___children___internal___contentDigest
  childrenImageSharp___children___internal___description
  childrenImageSharp___children___internal___fieldOwners
  childrenImageSharp___children___internal___ignoreType
  childrenImageSharp___children___internal___mediaType
  childrenImageSharp___children___internal___owner
  childrenImageSharp___children___internal___type
  childrenImageSharp___children___internal___contentFilePath
  childrenImageSharp___internal___content
  childrenImageSharp___internal___contentDigest
  childrenImageSharp___internal___description
  childrenImageSharp___internal___fieldOwners
  childrenImageSharp___internal___ignoreType
  childrenImageSharp___internal___mediaType
  childrenImageSharp___internal___owner
  childrenImageSharp___internal___type
  childrenImageSharp___internal___contentFilePath
  childImageSharp___fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___width
  childImageSharp___original___height
  childImageSharp___original___src
  childImageSharp___resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___id
  childImageSharp___parent___id
  childImageSharp___parent___parent___id
  childImageSharp___parent___parent___children
  childImageSharp___parent___children
  childImageSharp___parent___children___id
  childImageSharp___parent___children___children
  childImageSharp___parent___internal___content
  childImageSharp___parent___internal___contentDigest
  childImageSharp___parent___internal___description
  childImageSharp___parent___internal___fieldOwners
  childImageSharp___parent___internal___ignoreType
  childImageSharp___parent___internal___mediaType
  childImageSharp___parent___internal___owner
  childImageSharp___parent___internal___type
  childImageSharp___parent___internal___contentFilePath
  childImageSharp___children
  childImageSharp___children___id
  childImageSharp___children___parent___id
  childImageSharp___children___parent___children
  childImageSharp___children___children
  childImageSharp___children___children___id
  childImageSharp___children___children___children
  childImageSharp___children___internal___content
  childImageSharp___children___internal___contentDigest
  childImageSharp___children___internal___description
  childImageSharp___children___internal___fieldOwners
  childImageSharp___children___internal___ignoreType
  childImageSharp___children___internal___mediaType
  childImageSharp___children___internal___owner
  childImageSharp___children___internal___type
  childImageSharp___children___internal___contentFilePath
  childImageSharp___internal___content
  childImageSharp___internal___contentDigest
  childImageSharp___internal___description
  childImageSharp___internal___fieldOwners
  childImageSharp___internal___ignoreType
  childImageSharp___internal___mediaType
  childImageSharp___internal___owner
  childImageSharp___internal___type
  childImageSharp___internal___contentFilePath
  childrenMdx
  childrenMdx___rawBody
  childrenMdx___fileAbsolutePath
  childrenMdx___frontmatter___title
  childrenMdx___frontmatter___description
  childrenMdx___frontmatter___date
  childrenMdx___frontmatter___published
  childrenMdx___frontmatter___image___sourceInstanceName
  childrenMdx___frontmatter___image___absolutePath
  childrenMdx___frontmatter___image___relativePath
  childrenMdx___frontmatter___image___extension
  childrenMdx___frontmatter___image___size
  childrenMdx___frontmatter___image___prettySize
  childrenMdx___frontmatter___image___modifiedTime
  childrenMdx___frontmatter___image___accessTime
  childrenMdx___frontmatter___image___changeTime
  childrenMdx___frontmatter___image___birthTime
  childrenMdx___frontmatter___image___root
  childrenMdx___frontmatter___image___dir
  childrenMdx___frontmatter___image___base
  childrenMdx___frontmatter___image___ext
  childrenMdx___frontmatter___image___name
  childrenMdx___frontmatter___image___relativeDirectory
  childrenMdx___frontmatter___image___dev
  childrenMdx___frontmatter___image___mode
  childrenMdx___frontmatter___image___nlink
  childrenMdx___frontmatter___image___uid
  childrenMdx___frontmatter___image___gid
  childrenMdx___frontmatter___image___rdev
  childrenMdx___frontmatter___image___ino
  childrenMdx___frontmatter___image___atimeMs
  childrenMdx___frontmatter___image___mtimeMs
  childrenMdx___frontmatter___image___ctimeMs
  childrenMdx___frontmatter___image___atime
  childrenMdx___frontmatter___image___mtime
  childrenMdx___frontmatter___image___ctime
  childrenMdx___frontmatter___image___birthtime
  childrenMdx___frontmatter___image___birthtimeMs
  childrenMdx___frontmatter___image___blksize
  childrenMdx___frontmatter___image___blocks
  childrenMdx___frontmatter___image___publicURL
  childrenMdx___frontmatter___image___childrenImageSharp
  childrenMdx___frontmatter___image___childrenMdx
  childrenMdx___frontmatter___image___childrenTranslationsJson
  childrenMdx___frontmatter___image___id
  childrenMdx___frontmatter___image___children
  childrenMdx___frontmatter___imageAlt
  childrenMdx___frontmatter___embeddedImagesLocal
  childrenMdx___frontmatter___embeddedImagesLocal___sourceInstanceName
  childrenMdx___frontmatter___embeddedImagesLocal___absolutePath
  childrenMdx___frontmatter___embeddedImagesLocal___relativePath
  childrenMdx___frontmatter___embeddedImagesLocal___extension
  childrenMdx___frontmatter___embeddedImagesLocal___size
  childrenMdx___frontmatter___embeddedImagesLocal___prettySize
  childrenMdx___frontmatter___embeddedImagesLocal___modifiedTime
  childrenMdx___frontmatter___embeddedImagesLocal___accessTime
  childrenMdx___frontmatter___embeddedImagesLocal___changeTime
  childrenMdx___frontmatter___embeddedImagesLocal___birthTime
  childrenMdx___frontmatter___embeddedImagesLocal___root
  childrenMdx___frontmatter___embeddedImagesLocal___dir
  childrenMdx___frontmatter___embeddedImagesLocal___base
  childrenMdx___frontmatter___embeddedImagesLocal___ext
  childrenMdx___frontmatter___embeddedImagesLocal___name
  childrenMdx___frontmatter___embeddedImagesLocal___relativeDirectory
  childrenMdx___frontmatter___embeddedImagesLocal___dev
  childrenMdx___frontmatter___embeddedImagesLocal___mode
  childrenMdx___frontmatter___embeddedImagesLocal___nlink
  childrenMdx___frontmatter___embeddedImagesLocal___uid
  childrenMdx___frontmatter___embeddedImagesLocal___gid
  childrenMdx___frontmatter___embeddedImagesLocal___rdev
  childrenMdx___frontmatter___embeddedImagesLocal___ino
  childrenMdx___frontmatter___embeddedImagesLocal___atimeMs
  childrenMdx___frontmatter___embeddedImagesLocal___mtimeMs
  childrenMdx___frontmatter___embeddedImagesLocal___ctimeMs
  childrenMdx___frontmatter___embeddedImagesLocal___atime
  childrenMdx___frontmatter___embeddedImagesLocal___mtime
  childrenMdx___frontmatter___embeddedImagesLocal___ctime
  childrenMdx___frontmatter___embeddedImagesLocal___birthtime
  childrenMdx___frontmatter___embeddedImagesLocal___birthtimeMs
  childrenMdx___frontmatter___embeddedImagesLocal___blksize
  childrenMdx___frontmatter___embeddedImagesLocal___blocks
  childrenMdx___frontmatter___embeddedImagesLocal___publicURL
  childrenMdx___frontmatter___embeddedImagesLocal___childrenImageSharp
  childrenMdx___frontmatter___embeddedImagesLocal___childrenMdx
  childrenMdx___frontmatter___embeddedImagesLocal___childrenTranslationsJson
  childrenMdx___frontmatter___embeddedImagesLocal___id
  childrenMdx___frontmatter___embeddedImagesLocal___children
  childrenMdx___frontmatter___imageCover
  childrenMdx___slug
  childrenMdx___body
  childrenMdx___excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenMdx___headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenMdx___headings___value
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenMdx___headings___depth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenMdx___html
  childrenMdx___mdxAST
  childrenMdx___tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenMdx___timeToRead
  childrenMdx___wordCount___paragraphs
  childrenMdx___wordCount___sentences
  childrenMdx___wordCount___words
  childrenMdx___fields___localizedSlug
  childrenMdx___fields___slug
  childrenMdx___fields___locale
  childrenMdx___fields___isDefault
  childrenMdx___id
  childrenMdx___parent___id
  childrenMdx___parent___parent___id
  childrenMdx___parent___parent___children
  childrenMdx___parent___children
  childrenMdx___parent___children___id
  childrenMdx___parent___children___children
  childrenMdx___parent___internal___content
  childrenMdx___parent___internal___contentDigest
  childrenMdx___parent___internal___description
  childrenMdx___parent___internal___fieldOwners
  childrenMdx___parent___internal___ignoreType
  childrenMdx___parent___internal___mediaType
  childrenMdx___parent___internal___owner
  childrenMdx___parent___internal___type
  childrenMdx___parent___internal___contentFilePath
  childrenMdx___children
  childrenMdx___children___id
  childrenMdx___children___parent___id
  childrenMdx___children___parent___children
  childrenMdx___children___children
  childrenMdx___children___children___id
  childrenMdx___children___children___children
  childrenMdx___children___internal___content
  childrenMdx___children___internal___contentDigest
  childrenMdx___children___internal___description
  childrenMdx___children___internal___fieldOwners
  childrenMdx___children___internal___ignoreType
  childrenMdx___children___internal___mediaType
  childrenMdx___children___internal___owner
  childrenMdx___children___internal___type
  childrenMdx___children___internal___contentFilePath
  childrenMdx___internal___content
  childrenMdx___internal___contentDigest
  childrenMdx___internal___description
  childrenMdx___internal___fieldOwners
  childrenMdx___internal___ignoreType
  childrenMdx___internal___mediaType
  childrenMdx___internal___owner
  childrenMdx___internal___type
  childrenMdx___internal___contentFilePath
  childMdx___rawBody
  childMdx___fileAbsolutePath
  childMdx___frontmatter___title
  childMdx___frontmatter___description
  childMdx___frontmatter___date
  childMdx___frontmatter___published
  childMdx___frontmatter___image___sourceInstanceName
  childMdx___frontmatter___image___absolutePath
  childMdx___frontmatter___image___relativePath
  childMdx___frontmatter___image___extension
  childMdx___frontmatter___image___size
  childMdx___frontmatter___image___prettySize
  childMdx___frontmatter___image___modifiedTime
  childMdx___frontmatter___image___accessTime
  childMdx___frontmatter___image___changeTime
  childMdx___frontmatter___image___birthTime
  childMdx___frontmatter___image___root
  childMdx___frontmatter___image___dir
  childMdx___frontmatter___image___base
  childMdx___frontmatter___image___ext
  childMdx___frontmatter___image___name
  childMdx___frontmatter___image___relativeDirectory
  childMdx___frontmatter___image___dev
  childMdx___frontmatter___image___mode
  childMdx___frontmatter___image___nlink
  childMdx___frontmatter___image___uid
  childMdx___frontmatter___image___gid
  childMdx___frontmatter___image___rdev
  childMdx___frontmatter___image___ino
  childMdx___frontmatter___image___atimeMs
  childMdx___frontmatter___image___mtimeMs
  childMdx___frontmatter___image___ctimeMs
  childMdx___frontmatter___image___atime
  childMdx___frontmatter___image___mtime
  childMdx___frontmatter___image___ctime
  childMdx___frontmatter___image___birthtime
  childMdx___frontmatter___image___birthtimeMs
  childMdx___frontmatter___image___blksize
  childMdx___frontmatter___image___blocks
  childMdx___frontmatter___image___publicURL
  childMdx___frontmatter___image___childrenImageSharp
  childMdx___frontmatter___image___childrenMdx
  childMdx___frontmatter___image___childrenTranslationsJson
  childMdx___frontmatter___image___id
  childMdx___frontmatter___image___children
  childMdx___frontmatter___imageAlt
  childMdx___frontmatter___embeddedImagesLocal
  childMdx___frontmatter___embeddedImagesLocal___sourceInstanceName
  childMdx___frontmatter___embeddedImagesLocal___absolutePath
  childMdx___frontmatter___embeddedImagesLocal___relativePath
  childMdx___frontmatter___embeddedImagesLocal___extension
  childMdx___frontmatter___embeddedImagesLocal___size
  childMdx___frontmatter___embeddedImagesLocal___prettySize
  childMdx___frontmatter___embeddedImagesLocal___modifiedTime
  childMdx___frontmatter___embeddedImagesLocal___accessTime
  childMdx___frontmatter___embeddedImagesLocal___changeTime
  childMdx___frontmatter___embeddedImagesLocal___birthTime
  childMdx___frontmatter___embeddedImagesLocal___root
  childMdx___frontmatter___embeddedImagesLocal___dir
  childMdx___frontmatter___embeddedImagesLocal___base
  childMdx___frontmatter___embeddedImagesLocal___ext
  childMdx___frontmatter___embeddedImagesLocal___name
  childMdx___frontmatter___embeddedImagesLocal___relativeDirectory
  childMdx___frontmatter___embeddedImagesLocal___dev
  childMdx___frontmatter___embeddedImagesLocal___mode
  childMdx___frontmatter___embeddedImagesLocal___nlink
  childMdx___frontmatter___embeddedImagesLocal___uid
  childMdx___frontmatter___embeddedImagesLocal___gid
  childMdx___frontmatter___embeddedImagesLocal___rdev
  childMdx___frontmatter___embeddedImagesLocal___ino
  childMdx___frontmatter___embeddedImagesLocal___atimeMs
  childMdx___frontmatter___embeddedImagesLocal___mtimeMs
  childMdx___frontmatter___embeddedImagesLocal___ctimeMs
  childMdx___frontmatter___embeddedImagesLocal___atime
  childMdx___frontmatter___embeddedImagesLocal___mtime
  childMdx___frontmatter___embeddedImagesLocal___ctime
  childMdx___frontmatter___embeddedImagesLocal___birthtime
  childMdx___frontmatter___embeddedImagesLocal___birthtimeMs
  childMdx___frontmatter___embeddedImagesLocal___blksize
  childMdx___frontmatter___embeddedImagesLocal___blocks
  childMdx___frontmatter___embeddedImagesLocal___publicURL
  childMdx___frontmatter___embeddedImagesLocal___childrenImageSharp
  childMdx___frontmatter___embeddedImagesLocal___childrenMdx
  childMdx___frontmatter___embeddedImagesLocal___childrenTranslationsJson
  childMdx___frontmatter___embeddedImagesLocal___id
  childMdx___frontmatter___embeddedImagesLocal___children
  childMdx___frontmatter___imageCover
  childMdx___slug
  childMdx___body
  childMdx___excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childMdx___headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childMdx___headings___value
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childMdx___headings___depth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childMdx___html
  childMdx___mdxAST
  childMdx___tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childMdx___timeToRead
  childMdx___wordCount___paragraphs
  childMdx___wordCount___sentences
  childMdx___wordCount___words
  childMdx___fields___localizedSlug
  childMdx___fields___slug
  childMdx___fields___locale
  childMdx___fields___isDefault
  childMdx___id
  childMdx___parent___id
  childMdx___parent___parent___id
  childMdx___parent___parent___children
  childMdx___parent___children
  childMdx___parent___children___id
  childMdx___parent___children___children
  childMdx___parent___internal___content
  childMdx___parent___internal___contentDigest
  childMdx___parent___internal___description
  childMdx___parent___internal___fieldOwners
  childMdx___parent___internal___ignoreType
  childMdx___parent___internal___mediaType
  childMdx___parent___internal___owner
  childMdx___parent___internal___type
  childMdx___parent___internal___contentFilePath
  childMdx___children
  childMdx___children___id
  childMdx___children___parent___id
  childMdx___children___parent___children
  childMdx___children___children
  childMdx___children___children___id
  childMdx___children___children___children
  childMdx___children___internal___content
  childMdx___children___internal___contentDigest
  childMdx___children___internal___description
  childMdx___children___internal___fieldOwners
  childMdx___children___internal___ignoreType
  childMdx___children___internal___mediaType
  childMdx___children___internal___owner
  childMdx___children___internal___type
  childMdx___children___internal___contentFilePath
  childMdx___internal___content
  childMdx___internal___contentDigest
  childMdx___internal___description
  childMdx___internal___fieldOwners
  childMdx___internal___ignoreType
  childMdx___internal___mediaType
  childMdx___internal___owner
  childMdx___internal___type
  childMdx___internal___contentFilePath
  childrenTranslationsJson
  childrenTranslationsJson___id
  childrenTranslationsJson___parent___id
  childrenTranslationsJson___parent___parent___id
  childrenTranslationsJson___parent___parent___children
  childrenTranslationsJson___parent___children
  childrenTranslationsJson___parent___children___id
  childrenTranslationsJson___parent___children___children
  childrenTranslationsJson___parent___internal___content
  childrenTranslationsJson___parent___internal___contentDigest
  childrenTranslationsJson___parent___internal___description
  childrenTranslationsJson___parent___internal___fieldOwners
  childrenTranslationsJson___parent___internal___ignoreType
  childrenTranslationsJson___parent___internal___mediaType
  childrenTranslationsJson___parent___internal___owner
  childrenTranslationsJson___parent___internal___type
  childrenTranslationsJson___parent___internal___contentFilePath
  childrenTranslationsJson___children
  childrenTranslationsJson___children___id
  childrenTranslationsJson___children___parent___id
  childrenTranslationsJson___children___parent___children
  childrenTranslationsJson___children___children
  childrenTranslationsJson___children___children___id
  childrenTranslationsJson___children___children___children
  childrenTranslationsJson___children___internal___content
  childrenTranslationsJson___children___internal___contentDigest
  childrenTranslationsJson___children___internal___description
  childrenTranslationsJson___children___internal___fieldOwners
  childrenTranslationsJson___children___internal___ignoreType
  childrenTranslationsJson___children___internal___mediaType
  childrenTranslationsJson___children___internal___owner
  childrenTranslationsJson___children___internal___type
  childrenTranslationsJson___children___internal___contentFilePath
  childrenTranslationsJson___internal___content
  childrenTranslationsJson___internal___contentDigest
  childrenTranslationsJson___internal___description
  childrenTranslationsJson___internal___fieldOwners
  childrenTranslationsJson___internal___ignoreType
  childrenTranslationsJson___internal___mediaType
  childrenTranslationsJson___internal___owner
  childrenTranslationsJson___internal___type
  childrenTranslationsJson___internal___contentFilePath
  childrenTranslationsJson___author
  childrenTranslationsJson___about_me
  childrenTranslationsJson___about_me_description
  childrenTranslationsJson___and_i_build
  childrenTranslationsJson___battleship_description
  childrenTranslationsJson___code_samples
  childrenTranslationsJson___ctbook_description
  childrenTranslationsJson___ctbook_readsample
  childrenTranslationsJson___cv_link
  childrenTranslationsJson___download_cv
  childrenTranslationsJson___ecommerce_websites
  childrenTranslationsJson___edit_posts_on_github
  childrenTranslationsJson___hi_my_name_is
  childrenTranslationsJson___landing_pages
  childrenTranslationsJson___mobile_and_web_projects
  childrenTranslationsJson___mobile_applications
  childrenTranslationsJson___my_stack
  childrenTranslationsJson___my_stack_backend
  childrenTranslationsJson___my_stack_frontend
  childrenTranslationsJson___my_stack_sysops
  childrenTranslationsJson___personal_projects_httpixel
  childrenTranslationsJson___personal_projects_pills
  childrenTranslationsJson___powered_by_gatsby
  childrenTranslationsJson___projects
  childrenTranslationsJson___roomie_description
  childrenTranslationsJson___software_engineer
  childrenTranslationsJson___web_applications
  childrenTranslationsJson___what_i_do
  childrenTranslationsJson___what_i_do_backend
  childrenTranslationsJson___what_i_do_frontend
  childrenTranslationsJson___what_i_do_mobile
  childrenTranslationsJson___what_i_do_sysops
  childrenTranslationsJson___who_am_i
  childrenTranslationsJson___written_by
  childTranslationsJson___id
  childTranslationsJson___parent___id
  childTranslationsJson___parent___parent___id
  childTranslationsJson___parent___parent___children
  childTranslationsJson___parent___children
  childTranslationsJson___parent___children___id
  childTranslationsJson___parent___children___children
  childTranslationsJson___parent___internal___content
  childTranslationsJson___parent___internal___contentDigest
  childTranslationsJson___parent___internal___description
  childTranslationsJson___parent___internal___fieldOwners
  childTranslationsJson___parent___internal___ignoreType
  childTranslationsJson___parent___internal___mediaType
  childTranslationsJson___parent___internal___owner
  childTranslationsJson___parent___internal___type
  childTranslationsJson___parent___internal___contentFilePath
  childTranslationsJson___children
  childTranslationsJson___children___id
  childTranslationsJson___children___parent___id
  childTranslationsJson___children___parent___children
  childTranslationsJson___children___children
  childTranslationsJson___children___children___id
  childTranslationsJson___children___children___children
  childTranslationsJson___children___internal___content
  childTranslationsJson___children___internal___contentDigest
  childTranslationsJson___children___internal___description
  childTranslationsJson___children___internal___fieldOwners
  childTranslationsJson___children___internal___ignoreType
  childTranslationsJson___children___internal___mediaType
  childTranslationsJson___children___internal___owner
  childTranslationsJson___children___internal___type
  childTranslationsJson___children___internal___contentFilePath
  childTranslationsJson___internal___content
  childTranslationsJson___internal___contentDigest
  childTranslationsJson___internal___description
  childTranslationsJson___internal___fieldOwners
  childTranslationsJson___internal___ignoreType
  childTranslationsJson___internal___mediaType
  childTranslationsJson___internal___owner
  childTranslationsJson___internal___type
  childTranslationsJson___internal___contentFilePath
  childTranslationsJson___author
  childTranslationsJson___about_me
  childTranslationsJson___about_me_description
  childTranslationsJson___and_i_build
  childTranslationsJson___battleship_description
  childTranslationsJson___code_samples
  childTranslationsJson___ctbook_description
  childTranslationsJson___ctbook_readsample
  childTranslationsJson___cv_link
  childTranslationsJson___download_cv
  childTranslationsJson___ecommerce_websites
  childTranslationsJson___edit_posts_on_github
  childTranslationsJson___hi_my_name_is
  childTranslationsJson___landing_pages
  childTranslationsJson___mobile_and_web_projects
  childTranslationsJson___mobile_applications
  childTranslationsJson___my_stack
  childTranslationsJson___my_stack_backend
  childTranslationsJson___my_stack_frontend
  childTranslationsJson___my_stack_sysops
  childTranslationsJson___personal_projects_httpixel
  childTranslationsJson___personal_projects_pills
  childTranslationsJson___powered_by_gatsby
  childTranslationsJson___projects
  childTranslationsJson___roomie_description
  childTranslationsJson___software_engineer
  childTranslationsJson___web_applications
  childTranslationsJson___what_i_do
  childTranslationsJson___what_i_do_backend
  childTranslationsJson___what_i_do_frontend
  childTranslationsJson___what_i_do_mobile
  childTranslationsJson___what_i_do_sysops
  childTranslationsJson___who_am_i
  childTranslationsJson___written_by
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
  field: String!
  fieldValue: String
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: DirectoryFieldsEnum!
  ): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: DirectoryFieldsEnum!
  ): [DirectoryGroupConnection!]!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  author: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  siteMetadata___author
  siteMetadata___siteUrl
  port
  host
  polyfill
  pathPrefix
  jsxRuntime
  trailingSlash
  graphqlTypegen
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  jsxRuntime: StringQueryOperatorInput
  trailingSlash: StringQueryOperatorInput
  graphqlTypegen: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SiteFunctionFieldsEnum!
  ): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  functionRoute
  pluginName
  originalAbsoluteFilePath
  originalRelativeFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SiteFunctionFieldsEnum!
  ): [SiteFunctionGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  functionRoute: StringQueryOperatorInput
  pluginName: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: JSONQueryOperatorInput
  packageJson: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SitePageFieldsEnum!
  ): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  pageContext
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions
  pluginCreator___packageJson
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___internal___contentFilePath
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___internal___contentFilePath
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___internal___contentFilePath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SitePageFieldsEnum!
  ): [SitePageGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  pageContext: JSONQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SitePluginFieldsEnum!
  ): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  resolve
  name
  version
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  pluginOptions
  packageJson
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SitePluginFieldsEnum!
  ): [SitePluginGroupConnection!]!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SiteBuildMetadataFieldsEnum!
  ): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: SiteBuildMetadataFieldsEnum!
  ): [SiteBuildMetadataGroupConnection!]!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: ImageSharpFieldsEnum!
  ): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___width
  original___height
  original___src
  resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: ImageSharpFieldsEnum!
  ): [ImageSharpGroupConnection!]!
  field: String!
  fieldValue: String
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type MdxConnection {
  totalCount: Int!
  edges: [MdxEdge!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  distinct(field: MdxFieldsEnum!): [String!]!
  max(field: MdxFieldsEnum!): Float
  min(field: MdxFieldsEnum!): Float
  sum(field: MdxFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MdxFieldsEnum!): [MdxGroupConnection!]!
}

type MdxEdge {
  next: Mdx
  node: Mdx!
  previous: Mdx
}

enum MdxFieldsEnum {
  rawBody
  fileAbsolutePath
  frontmatter___title
  frontmatter___description
  frontmatter___date
  frontmatter___published
  frontmatter___image___sourceInstanceName
  frontmatter___image___absolutePath
  frontmatter___image___relativePath
  frontmatter___image___extension
  frontmatter___image___size
  frontmatter___image___prettySize
  frontmatter___image___modifiedTime
  frontmatter___image___accessTime
  frontmatter___image___changeTime
  frontmatter___image___birthTime
  frontmatter___image___root
  frontmatter___image___dir
  frontmatter___image___base
  frontmatter___image___ext
  frontmatter___image___name
  frontmatter___image___relativeDirectory
  frontmatter___image___dev
  frontmatter___image___mode
  frontmatter___image___nlink
  frontmatter___image___uid
  frontmatter___image___gid
  frontmatter___image___rdev
  frontmatter___image___ino
  frontmatter___image___atimeMs
  frontmatter___image___mtimeMs
  frontmatter___image___ctimeMs
  frontmatter___image___atime
  frontmatter___image___mtime
  frontmatter___image___ctime
  frontmatter___image___birthtime
  frontmatter___image___birthtimeMs
  frontmatter___image___blksize
  frontmatter___image___blocks
  frontmatter___image___publicURL
  frontmatter___image___childrenImageSharp
  frontmatter___image___childrenImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childrenImageSharp___id
  frontmatter___image___childrenImageSharp___children
  frontmatter___image___childImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childImageSharp___id
  frontmatter___image___childImageSharp___children
  frontmatter___image___childrenMdx
  frontmatter___image___childrenMdx___rawBody
  frontmatter___image___childrenMdx___fileAbsolutePath
  frontmatter___image___childrenMdx___slug
  frontmatter___image___childrenMdx___body
  frontmatter___image___childrenMdx___excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childrenMdx___headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childrenMdx___html
  frontmatter___image___childrenMdx___mdxAST
  frontmatter___image___childrenMdx___tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childrenMdx___timeToRead
  frontmatter___image___childrenMdx___id
  frontmatter___image___childrenMdx___children
  frontmatter___image___childMdx___rawBody
  frontmatter___image___childMdx___fileAbsolutePath
  frontmatter___image___childMdx___slug
  frontmatter___image___childMdx___body
  frontmatter___image___childMdx___excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childMdx___headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childMdx___html
  frontmatter___image___childMdx___mdxAST
  frontmatter___image___childMdx___tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___image___childMdx___timeToRead
  frontmatter___image___childMdx___id
  frontmatter___image___childMdx___children
  frontmatter___image___childrenTranslationsJson
  frontmatter___image___childrenTranslationsJson___id
  frontmatter___image___childrenTranslationsJson___children
  frontmatter___image___childrenTranslationsJson___author
  frontmatter___image___childrenTranslationsJson___about_me
  frontmatter___image___childrenTranslationsJson___about_me_description
  frontmatter___image___childrenTranslationsJson___and_i_build
  frontmatter___image___childrenTranslationsJson___battleship_description
  frontmatter___image___childrenTranslationsJson___code_samples
  frontmatter___image___childrenTranslationsJson___ctbook_description
  frontmatter___image___childrenTranslationsJson___ctbook_readsample
  frontmatter___image___childrenTranslationsJson___cv_link
  frontmatter___image___childrenTranslationsJson___download_cv
  frontmatter___image___childrenTranslationsJson___ecommerce_websites
  frontmatter___image___childrenTranslationsJson___edit_posts_on_github
  frontmatter___image___childrenTranslationsJson___hi_my_name_is
  frontmatter___image___childrenTranslationsJson___landing_pages
  frontmatter___image___childrenTranslationsJson___mobile_and_web_projects
  frontmatter___image___childrenTranslationsJson___mobile_applications
  frontmatter___image___childrenTranslationsJson___my_stack
  frontmatter___image___childrenTranslationsJson___my_stack_backend
  frontmatter___image___childrenTranslationsJson___my_stack_frontend
  frontmatter___image___childrenTranslationsJson___my_stack_sysops
  frontmatter___image___childrenTranslationsJson___personal_projects_httpixel
  frontmatter___image___childrenTranslationsJson___personal_projects_pills
  frontmatter___image___childrenTranslationsJson___powered_by_gatsby
  frontmatter___image___childrenTranslationsJson___projects
  frontmatter___image___childrenTranslationsJson___roomie_description
  frontmatter___image___childrenTranslationsJson___software_engineer
  frontmatter___image___childrenTranslationsJson___web_applications
  frontmatter___image___childrenTranslationsJson___what_i_do
  frontmatter___image___childrenTranslationsJson___what_i_do_backend
  frontmatter___image___childrenTranslationsJson___what_i_do_frontend
  frontmatter___image___childrenTranslationsJson___what_i_do_mobile
  frontmatter___image___childrenTranslationsJson___what_i_do_sysops
  frontmatter___image___childrenTranslationsJson___who_am_i
  frontmatter___image___childrenTranslationsJson___written_by
  frontmatter___image___childTranslationsJson___id
  frontmatter___image___childTranslationsJson___children
  frontmatter___image___childTranslationsJson___author
  frontmatter___image___childTranslationsJson___about_me
  frontmatter___image___childTranslationsJson___about_me_description
  frontmatter___image___childTranslationsJson___and_i_build
  frontmatter___image___childTranslationsJson___battleship_description
  frontmatter___image___childTranslationsJson___code_samples
  frontmatter___image___childTranslationsJson___ctbook_description
  frontmatter___image___childTranslationsJson___ctbook_readsample
  frontmatter___image___childTranslationsJson___cv_link
  frontmatter___image___childTranslationsJson___download_cv
  frontmatter___image___childTranslationsJson___ecommerce_websites
  frontmatter___image___childTranslationsJson___edit_posts_on_github
  frontmatter___image___childTranslationsJson___hi_my_name_is
  frontmatter___image___childTranslationsJson___landing_pages
  frontmatter___image___childTranslationsJson___mobile_and_web_projects
  frontmatter___image___childTranslationsJson___mobile_applications
  frontmatter___image___childTranslationsJson___my_stack
  frontmatter___image___childTranslationsJson___my_stack_backend
  frontmatter___image___childTranslationsJson___my_stack_frontend
  frontmatter___image___childTranslationsJson___my_stack_sysops
  frontmatter___image___childTranslationsJson___personal_projects_httpixel
  frontmatter___image___childTranslationsJson___personal_projects_pills
  frontmatter___image___childTranslationsJson___powered_by_gatsby
  frontmatter___image___childTranslationsJson___projects
  frontmatter___image___childTranslationsJson___roomie_description
  frontmatter___image___childTranslationsJson___software_engineer
  frontmatter___image___childTranslationsJson___web_applications
  frontmatter___image___childTranslationsJson___what_i_do
  frontmatter___image___childTranslationsJson___what_i_do_backend
  frontmatter___image___childTranslationsJson___what_i_do_frontend
  frontmatter___image___childTranslationsJson___what_i_do_mobile
  frontmatter___image___childTranslationsJson___what_i_do_sysops
  frontmatter___image___childTranslationsJson___who_am_i
  frontmatter___image___childTranslationsJson___written_by
  frontmatter___image___id
  frontmatter___image___parent___id
  frontmatter___image___parent___children
  frontmatter___image___children
  frontmatter___image___children___id
  frontmatter___image___children___children
  frontmatter___image___internal___content
  frontmatter___image___internal___contentDigest
  frontmatter___image___internal___description
  frontmatter___image___internal___fieldOwners
  frontmatter___image___internal___ignoreType
  frontmatter___image___internal___mediaType
  frontmatter___image___internal___owner
  frontmatter___image___internal___type
  frontmatter___image___internal___contentFilePath
  frontmatter___imageAlt
  frontmatter___embeddedImagesLocal
  frontmatter___embeddedImagesLocal___sourceInstanceName
  frontmatter___embeddedImagesLocal___absolutePath
  frontmatter___embeddedImagesLocal___relativePath
  frontmatter___embeddedImagesLocal___extension
  frontmatter___embeddedImagesLocal___size
  frontmatter___embeddedImagesLocal___prettySize
  frontmatter___embeddedImagesLocal___modifiedTime
  frontmatter___embeddedImagesLocal___accessTime
  frontmatter___embeddedImagesLocal___changeTime
  frontmatter___embeddedImagesLocal___birthTime
  frontmatter___embeddedImagesLocal___root
  frontmatter___embeddedImagesLocal___dir
  frontmatter___embeddedImagesLocal___base
  frontmatter___embeddedImagesLocal___ext
  frontmatter___embeddedImagesLocal___name
  frontmatter___embeddedImagesLocal___relativeDirectory
  frontmatter___embeddedImagesLocal___dev
  frontmatter___embeddedImagesLocal___mode
  frontmatter___embeddedImagesLocal___nlink
  frontmatter___embeddedImagesLocal___uid
  frontmatter___embeddedImagesLocal___gid
  frontmatter___embeddedImagesLocal___rdev
  frontmatter___embeddedImagesLocal___ino
  frontmatter___embeddedImagesLocal___atimeMs
  frontmatter___embeddedImagesLocal___mtimeMs
  frontmatter___embeddedImagesLocal___ctimeMs
  frontmatter___embeddedImagesLocal___atime
  frontmatter___embeddedImagesLocal___mtime
  frontmatter___embeddedImagesLocal___ctime
  frontmatter___embeddedImagesLocal___birthtime
  frontmatter___embeddedImagesLocal___birthtimeMs
  frontmatter___embeddedImagesLocal___blksize
  frontmatter___embeddedImagesLocal___blocks
  frontmatter___embeddedImagesLocal___publicURL
  frontmatter___embeddedImagesLocal___childrenImageSharp
  frontmatter___embeddedImagesLocal___childrenImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childrenImageSharp___id
  frontmatter___embeddedImagesLocal___childrenImageSharp___children
  frontmatter___embeddedImagesLocal___childImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childImageSharp___id
  frontmatter___embeddedImagesLocal___childImageSharp___children
  frontmatter___embeddedImagesLocal___childrenMdx
  frontmatter___embeddedImagesLocal___childrenMdx___rawBody
  frontmatter___embeddedImagesLocal___childrenMdx___fileAbsolutePath
  frontmatter___embeddedImagesLocal___childrenMdx___slug
  frontmatter___embeddedImagesLocal___childrenMdx___body
  frontmatter___embeddedImagesLocal___childrenMdx___excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childrenMdx___headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childrenMdx___html
  frontmatter___embeddedImagesLocal___childrenMdx___mdxAST
  frontmatter___embeddedImagesLocal___childrenMdx___tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childrenMdx___timeToRead
  frontmatter___embeddedImagesLocal___childrenMdx___id
  frontmatter___embeddedImagesLocal___childrenMdx___children
  frontmatter___embeddedImagesLocal___childMdx___rawBody
  frontmatter___embeddedImagesLocal___childMdx___fileAbsolutePath
  frontmatter___embeddedImagesLocal___childMdx___slug
  frontmatter___embeddedImagesLocal___childMdx___body
  frontmatter___embeddedImagesLocal___childMdx___excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childMdx___headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childMdx___html
  frontmatter___embeddedImagesLocal___childMdx___mdxAST
  frontmatter___embeddedImagesLocal___childMdx___tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  frontmatter___embeddedImagesLocal___childMdx___timeToRead
  frontmatter___embeddedImagesLocal___childMdx___id
  frontmatter___embeddedImagesLocal___childMdx___children
  frontmatter___embeddedImagesLocal___childrenTranslationsJson
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___id
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___children
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___author
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___about_me
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___about_me_description
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___and_i_build
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___battleship_description
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___code_samples
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___ctbook_description
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___ctbook_readsample
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___cv_link
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___download_cv
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___ecommerce_websites
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___edit_posts_on_github
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___hi_my_name_is
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___landing_pages
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___mobile_and_web_projects
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___mobile_applications
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack_backend
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack_frontend
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack_sysops
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___personal_projects_httpixel
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___personal_projects_pills
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___powered_by_gatsby
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___projects
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___roomie_description
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___software_engineer
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___web_applications
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_backend
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_frontend
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_mobile
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_sysops
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___who_am_i
  frontmatter___embeddedImagesLocal___childrenTranslationsJson___written_by
  frontmatter___embeddedImagesLocal___childTranslationsJson___id
  frontmatter___embeddedImagesLocal___childTranslationsJson___children
  frontmatter___embeddedImagesLocal___childTranslationsJson___author
  frontmatter___embeddedImagesLocal___childTranslationsJson___about_me
  frontmatter___embeddedImagesLocal___childTranslationsJson___about_me_description
  frontmatter___embeddedImagesLocal___childTranslationsJson___and_i_build
  frontmatter___embeddedImagesLocal___childTranslationsJson___battleship_description
  frontmatter___embeddedImagesLocal___childTranslationsJson___code_samples
  frontmatter___embeddedImagesLocal___childTranslationsJson___ctbook_description
  frontmatter___embeddedImagesLocal___childTranslationsJson___ctbook_readsample
  frontmatter___embeddedImagesLocal___childTranslationsJson___cv_link
  frontmatter___embeddedImagesLocal___childTranslationsJson___download_cv
  frontmatter___embeddedImagesLocal___childTranslationsJson___ecommerce_websites
  frontmatter___embeddedImagesLocal___childTranslationsJson___edit_posts_on_github
  frontmatter___embeddedImagesLocal___childTranslationsJson___hi_my_name_is
  frontmatter___embeddedImagesLocal___childTranslationsJson___landing_pages
  frontmatter___embeddedImagesLocal___childTranslationsJson___mobile_and_web_projects
  frontmatter___embeddedImagesLocal___childTranslationsJson___mobile_applications
  frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack
  frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack_backend
  frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack_frontend
  frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack_sysops
  frontmatter___embeddedImagesLocal___childTranslationsJson___personal_projects_httpixel
  frontmatter___embeddedImagesLocal___childTranslationsJson___personal_projects_pills
  frontmatter___embeddedImagesLocal___childTranslationsJson___powered_by_gatsby
  frontmatter___embeddedImagesLocal___childTranslationsJson___projects
  frontmatter___embeddedImagesLocal___childTranslationsJson___roomie_description
  frontmatter___embeddedImagesLocal___childTranslationsJson___software_engineer
  frontmatter___embeddedImagesLocal___childTranslationsJson___web_applications
  frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do
  frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_backend
  frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_frontend
  frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_mobile
  frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_sysops
  frontmatter___embeddedImagesLocal___childTranslationsJson___who_am_i
  frontmatter___embeddedImagesLocal___childTranslationsJson___written_by
  frontmatter___embeddedImagesLocal___id
  frontmatter___embeddedImagesLocal___parent___id
  frontmatter___embeddedImagesLocal___parent___children
  frontmatter___embeddedImagesLocal___children
  frontmatter___embeddedImagesLocal___children___id
  frontmatter___embeddedImagesLocal___children___children
  frontmatter___embeddedImagesLocal___internal___content
  frontmatter___embeddedImagesLocal___internal___contentDigest
  frontmatter___embeddedImagesLocal___internal___description
  frontmatter___embeddedImagesLocal___internal___fieldOwners
  frontmatter___embeddedImagesLocal___internal___ignoreType
  frontmatter___embeddedImagesLocal___internal___mediaType
  frontmatter___embeddedImagesLocal___internal___owner
  frontmatter___embeddedImagesLocal___internal___type
  frontmatter___embeddedImagesLocal___internal___contentFilePath
  frontmatter___imageCover
  slug
  body
  excerpt
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  headings
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  headings___value
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  headings___depth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  html
  mdxAST
  tableOfContents
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  timeToRead
  wordCount___paragraphs
  wordCount___sentences
  wordCount___words
  fields___localizedSlug
  fields___slug
  fields___locale
  fields___isDefault
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
}

type MdxGroupConnection {
  totalCount: Int!
  edges: [MdxEdge!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  distinct(field: MdxFieldsEnum!): [String!]!
  max(field: MdxFieldsEnum!): Float
  min(field: MdxFieldsEnum!): Float
  sum(field: MdxFieldsEnum!): Float
  group(skip: Int, limit: Int, field: MdxFieldsEnum!): [MdxGroupConnection!]!
  field: String!
  fieldValue: String
}

input MdxSortInput {
  fields: [MdxFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type TranslationsJsonConnection {
  totalCount: Int!
  edges: [TranslationsJsonEdge!]!
  nodes: [TranslationsJson!]!
  pageInfo: PageInfo!
  distinct(field: TranslationsJsonFieldsEnum!): [String!]!
  max(field: TranslationsJsonFieldsEnum!): Float
  min(field: TranslationsJsonFieldsEnum!): Float
  sum(field: TranslationsJsonFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: TranslationsJsonFieldsEnum!
  ): [TranslationsJsonGroupConnection!]!
}

type TranslationsJsonEdge {
  next: TranslationsJson
  node: TranslationsJson!
  previous: TranslationsJson
}

enum TranslationsJsonFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___internal___contentFilePath
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___internal___contentFilePath
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___internal___contentFilePath
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___internal___contentFilePath
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___internal___contentFilePath
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___internal___contentFilePath
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  internal___contentFilePath
  author
  about_me
  about_me_description
  and_i_build
  battleship_description
  code_samples
  ctbook_description
  ctbook_readsample
  cv_link
  download_cv
  ecommerce_websites
  edit_posts_on_github
  hi_my_name_is
  landing_pages
  mobile_and_web_projects
  mobile_applications
  my_stack
  my_stack_backend
  my_stack_frontend
  my_stack_sysops
  personal_projects_httpixel
  personal_projects_pills
  powered_by_gatsby
  projects
  roomie_description
  software_engineer
  web_applications
  what_i_do
  what_i_do_backend
  what_i_do_frontend
  what_i_do_mobile
  what_i_do_sysops
  who_am_i
  written_by
}

type TranslationsJsonGroupConnection {
  totalCount: Int!
  edges: [TranslationsJsonEdge!]!
  nodes: [TranslationsJson!]!
  pageInfo: PageInfo!
  distinct(field: TranslationsJsonFieldsEnum!): [String!]!
  max(field: TranslationsJsonFieldsEnum!): Float
  min(field: TranslationsJsonFieldsEnum!): Float
  sum(field: TranslationsJsonFieldsEnum!): Float
  group(
    skip: Int
    limit: Int
    field: TranslationsJsonFieldsEnum!
  ): [TranslationsJsonGroupConnection!]!
  field: String!
  fieldValue: String
}

input TranslationsJsonSortInput {
  fields: [TranslationsJsonFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}
