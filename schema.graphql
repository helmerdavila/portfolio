# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer on OBJECT

"Do not infer field types from field values."
directive @dontInfer on OBJECT

"Define the mime-types handled by this type."
directive @mimeTypes(
    "The mime-types handled by this type."
    types: [String!]! = []
) on OBJECT

"Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`."
directive @childOf(
    "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
    mimeTypes: [String!]! = [],
    "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
    types: [String!]! = []
) on OBJECT

"""

DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    "Returns the first child node of type Mdx or null if there are no children of given type on this node"
    childMdx: Mdx
    "Returns the first child node of type TranslationsJson or null if there are no children of given type on this node"
    childTranslationsJson: TranslationsJson
    children: [Node!]!
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    "Returns all children nodes filtered by type Mdx"
    childrenMdx: [Mdx]
    "Returns all children nodes filtered by type TranslationsJson"
    childrenTranslationsJson: [TranslationsJson]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type Mdx implements Node {
    body: String!
    children: [Node!]!
    excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
    fields: MdxFields
    fileAbsolutePath: String!
    frontmatter: MdxFrontmatter
    headings(depth: HeadingsMdx): [MdxHeadingMdx]
    html: String
    id: ID!
    internal: Internal!
    mdxAST: JSON
    parent: Node
    rawBody: String!
    slug: String
    tableOfContents(maxDepth: Int): JSON
    timeToRead: Int
    wordCount: MdxWordCount
}

type MdxConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxEdge {
    next: Mdx
    node: Mdx!
    previous: Mdx
}

type MdxFields {
    isDefault: Boolean
    locale: String
}

type MdxFrontmatter {
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    embeddedImagesLocal: [File]
    image: File
    imageAlt: String
    imageCover: String
    published: Boolean
    title: String!
}

type MdxGroupConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    field: String!
    fieldValue: String
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxHeadingMdx {
    depth: Int
    value: String
}

type MdxWordCount {
    paragraphs: Int
    sentences: Int
    words: Int
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allMdx(filter: MdxFilterInput, limit: Int, skip: Int, sort: MdxSortInput): MdxConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    allStaticImage(filter: StaticImageFilterInput, limit: Int, skip: Int, sort: StaticImageSortInput): StaticImageConnection!
    allTranslationsJson(filter: TranslationsJsonFilterInput, limit: Int, skip: Int, sort: TranslationsJsonSortInput): TranslationsJsonConnection!
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, childMdx: MdxFilterInput, childTranslationsJson: TranslationsJsonFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenMdx: MdxFilterListInput, childrenTranslationsJson: TranslationsJsonFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    mdx(body: StringQueryOperatorInput, children: NodeFilterListInput, excerpt: StringQueryOperatorInput, fields: MdxFieldsFilterInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mdxAST: JSONQueryOperatorInput, parent: NodeFilterInput, rawBody: StringQueryOperatorInput, slug: StringQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput): Mdx
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, trailingSlash: StringQueryOperatorInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
    staticImage(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, id: StringQueryOperatorInput, ino: IntQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): StaticImage
    translationsJson(about_me: StringQueryOperatorInput, about_me_description: StringQueryOperatorInput, and_i_build: StringQueryOperatorInput, author: StringQueryOperatorInput, battleship_description: StringQueryOperatorInput, children: NodeFilterListInput, code_samples: StringQueryOperatorInput, ctbook_description: StringQueryOperatorInput, ctbook_readsample: StringQueryOperatorInput, cv_link: StringQueryOperatorInput, download_cv: StringQueryOperatorInput, ecommerce_websites: StringQueryOperatorInput, edit_posts_on_github: StringQueryOperatorInput, hi_my_name_is: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, landing_pages: StringQueryOperatorInput, mobile_and_web_projects: StringQueryOperatorInput, mobile_applications: StringQueryOperatorInput, my_stack: StringQueryOperatorInput, my_stack_backend: StringQueryOperatorInput, my_stack_frontend: StringQueryOperatorInput, my_stack_sysops: StringQueryOperatorInput, parent: NodeFilterInput, personal_projects_httpixel: StringQueryOperatorInput, personal_projects_pills: StringQueryOperatorInput, powered_by_gatsby: StringQueryOperatorInput, projects: StringQueryOperatorInput, roomie_description: StringQueryOperatorInput, software_engineer: StringQueryOperatorInput, web_applications: StringQueryOperatorInput, what_i_do: StringQueryOperatorInput, what_i_do_backend: StringQueryOperatorInput, what_i_do_frontend: StringQueryOperatorInput, what_i_do_mobile: StringQueryOperatorInput, what_i_do_sysops: StringQueryOperatorInput, who_am_i: StringQueryOperatorInput, written_by: StringQueryOperatorInput): TranslationsJson
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    jsxRuntime: String
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
    trailingSlash: String
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteFunction implements Node {
    absoluteCompiledFilePath: String!
    children: [Node!]!
    functionRoute: String!
    id: ID!
    internal: Internal!
    matchPath: String
    originalAbsoluteFilePath: String!
    originalRelativeFilePath: String!
    parent: Node
    pluginName: String!
    relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteFunctionEdge {
    next: SiteFunction
    node: SiteFunction!
    previous: SiteFunction
}

type SiteFunctionGroupConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteGroupConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    id: ID!
    internal: Internal!
    internalComponentName: String!
    matchPath: String
    pageContext: JSON
    parent: Node
    path: String!
    pluginCreator: SitePlugin
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: JSON
    parent: Node
    pluginFilepath: String
    pluginOptions: JSON
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SiteSiteMetadata {
    author: String
    description: String
    siteUrl: String
    title: String
}

type StaticImage implements Node {
    absolutePath: String
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    atimeMs: Float
    base: String
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    birthtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    birthtimeMs: Float
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    ctimeMs: Float
    dev: Int
    dir: String
    ext: String
    extension: String
    id: ID!
    ino: Int
    internal: Internal!
    mode: Int
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    mtimeMs: Float
    name: String
    nlink: Int
    parent: Node
    prettySize: String
    rdev: Int
    relativeDirectory: String
    relativePath: String
    root: String
    size: Int
    sourceInstanceName: String
    uid: Int
}

type StaticImageConnection {
    distinct(field: StaticImageFieldsEnum!): [String!]!
    edges: [StaticImageEdge!]!
    group(field: StaticImageFieldsEnum!, limit: Int, skip: Int): [StaticImageGroupConnection!]!
    max(field: StaticImageFieldsEnum!): Float
    min(field: StaticImageFieldsEnum!): Float
    nodes: [StaticImage!]!
    pageInfo: PageInfo!
    sum(field: StaticImageFieldsEnum!): Float
    totalCount: Int!
}

type StaticImageEdge {
    next: StaticImage
    node: StaticImage!
    previous: StaticImage
}

type StaticImageGroupConnection {
    distinct(field: StaticImageFieldsEnum!): [String!]!
    edges: [StaticImageEdge!]!
    field: String!
    fieldValue: String
    group(field: StaticImageFieldsEnum!, limit: Int, skip: Int): [StaticImageGroupConnection!]!
    max(field: StaticImageFieldsEnum!): Float
    min(field: StaticImageFieldsEnum!): Float
    nodes: [StaticImage!]!
    pageInfo: PageInfo!
    sum(field: StaticImageFieldsEnum!): Float
    totalCount: Int!
}

type TranslationsJson implements Node {
    about_me: String
    about_me_description: String
    and_i_build: String
    author: String
    battleship_description: String
    children: [Node!]!
    code_samples: String
    ctbook_description: String
    ctbook_readsample: String
    cv_link: String
    download_cv: String
    ecommerce_websites: String
    edit_posts_on_github: String
    hi_my_name_is: String
    id: ID!
    internal: Internal!
    landing_pages: String
    mobile_and_web_projects: String
    mobile_applications: String
    my_stack: String
    my_stack_backend: String
    my_stack_frontend: String
    my_stack_sysops: String
    parent: Node
    personal_projects_httpixel: String
    personal_projects_pills: String
    powered_by_gatsby: String
    projects: String
    roomie_description: String
    software_engineer: String
    web_applications: String
    what_i_do: String
    what_i_do_backend: String
    what_i_do_frontend: String
    what_i_do_mobile: String
    what_i_do_sysops: String
    who_am_i: String
    written_by: String
}

type TranslationsJsonConnection {
    distinct(field: TranslationsJsonFieldsEnum!): [String!]!
    edges: [TranslationsJsonEdge!]!
    group(field: TranslationsJsonFieldsEnum!, limit: Int, skip: Int): [TranslationsJsonGroupConnection!]!
    max(field: TranslationsJsonFieldsEnum!): Float
    min(field: TranslationsJsonFieldsEnum!): Float
    nodes: [TranslationsJson!]!
    pageInfo: PageInfo!
    sum(field: TranslationsJsonFieldsEnum!): Float
    totalCount: Int!
}

type TranslationsJsonEdge {
    next: TranslationsJson
    node: TranslationsJson!
    previous: TranslationsJson
}

type TranslationsJsonGroupConnection {
    distinct(field: TranslationsJsonFieldsEnum!): [String!]!
    edges: [TranslationsJsonEdge!]!
    field: String!
    fieldValue: String
    group(field: TranslationsJsonFieldsEnum!, limit: Int, skip: Int): [TranslationsJsonGroupConnection!]!
    max(field: TranslationsJsonFieldsEnum!): Float
    min(field: TranslationsJsonFieldsEnum!): Float
    nodes: [TranslationsJson!]!
    pageInfo: PageInfo!
    sum(field: TranslationsJsonFieldsEnum!): Float
    totalCount: Int!
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children
    childImageSharp___children___children
    childImageSharp___children___children___children
    childImageSharp___children___children___id
    childImageSharp___children___id
    childImageSharp___children___internal___content
    childImageSharp___children___internal___contentDigest
    childImageSharp___children___internal___description
    childImageSharp___children___internal___fieldOwners
    childImageSharp___children___internal___ignoreType
    childImageSharp___children___internal___mediaType
    childImageSharp___children___internal___owner
    childImageSharp___children___internal___type
    childImageSharp___children___parent___children
    childImageSharp___children___parent___id
    childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id
    childImageSharp___internal___content
    childImageSharp___internal___contentDigest
    childImageSharp___internal___description
    childImageSharp___internal___fieldOwners
    childImageSharp___internal___ignoreType
    childImageSharp___internal___mediaType
    childImageSharp___internal___owner
    childImageSharp___internal___type
    childImageSharp___original___height
    childImageSharp___original___src
    childImageSharp___original___width
    childImageSharp___parent___children
    childImageSharp___parent___children___children
    childImageSharp___parent___children___id
    childImageSharp___parent___id
    childImageSharp___parent___internal___content
    childImageSharp___parent___internal___contentDigest
    childImageSharp___parent___internal___description
    childImageSharp___parent___internal___fieldOwners
    childImageSharp___parent___internal___ignoreType
    childImageSharp___parent___internal___mediaType
    childImageSharp___parent___internal___owner
    childImageSharp___parent___internal___type
    childImageSharp___parent___parent___children
    childImageSharp___parent___parent___id
    childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___body
    childMdx___children
    childMdx___children___children
    childMdx___children___children___children
    childMdx___children___children___id
    childMdx___children___id
    childMdx___children___internal___content
    childMdx___children___internal___contentDigest
    childMdx___children___internal___description
    childMdx___children___internal___fieldOwners
    childMdx___children___internal___ignoreType
    childMdx___children___internal___mediaType
    childMdx___children___internal___owner
    childMdx___children___internal___type
    childMdx___children___parent___children
    childMdx___children___parent___id
    childMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___fields___isDefault
    childMdx___fields___locale
    childMdx___fileAbsolutePath
    childMdx___frontmatter___date
    childMdx___frontmatter___description
    childMdx___frontmatter___embeddedImagesLocal
    childMdx___frontmatter___embeddedImagesLocal___absolutePath
    childMdx___frontmatter___embeddedImagesLocal___accessTime
    childMdx___frontmatter___embeddedImagesLocal___atime
    childMdx___frontmatter___embeddedImagesLocal___atimeMs
    childMdx___frontmatter___embeddedImagesLocal___base
    childMdx___frontmatter___embeddedImagesLocal___birthTime
    childMdx___frontmatter___embeddedImagesLocal___birthtime
    childMdx___frontmatter___embeddedImagesLocal___birthtimeMs
    childMdx___frontmatter___embeddedImagesLocal___blksize
    childMdx___frontmatter___embeddedImagesLocal___blocks
    childMdx___frontmatter___embeddedImagesLocal___changeTime
    childMdx___frontmatter___embeddedImagesLocal___children
    childMdx___frontmatter___embeddedImagesLocal___childrenImageSharp
    childMdx___frontmatter___embeddedImagesLocal___childrenMdx
    childMdx___frontmatter___embeddedImagesLocal___childrenTranslationsJson
    childMdx___frontmatter___embeddedImagesLocal___ctime
    childMdx___frontmatter___embeddedImagesLocal___ctimeMs
    childMdx___frontmatter___embeddedImagesLocal___dev
    childMdx___frontmatter___embeddedImagesLocal___dir
    childMdx___frontmatter___embeddedImagesLocal___ext
    childMdx___frontmatter___embeddedImagesLocal___extension
    childMdx___frontmatter___embeddedImagesLocal___gid
    childMdx___frontmatter___embeddedImagesLocal___id
    childMdx___frontmatter___embeddedImagesLocal___ino
    childMdx___frontmatter___embeddedImagesLocal___mode
    childMdx___frontmatter___embeddedImagesLocal___modifiedTime
    childMdx___frontmatter___embeddedImagesLocal___mtime
    childMdx___frontmatter___embeddedImagesLocal___mtimeMs
    childMdx___frontmatter___embeddedImagesLocal___name
    childMdx___frontmatter___embeddedImagesLocal___nlink
    childMdx___frontmatter___embeddedImagesLocal___prettySize
    childMdx___frontmatter___embeddedImagesLocal___publicURL
    childMdx___frontmatter___embeddedImagesLocal___rdev
    childMdx___frontmatter___embeddedImagesLocal___relativeDirectory
    childMdx___frontmatter___embeddedImagesLocal___relativePath
    childMdx___frontmatter___embeddedImagesLocal___root
    childMdx___frontmatter___embeddedImagesLocal___size
    childMdx___frontmatter___embeddedImagesLocal___sourceInstanceName
    childMdx___frontmatter___embeddedImagesLocal___uid
    childMdx___frontmatter___imageAlt
    childMdx___frontmatter___imageCover
    childMdx___frontmatter___image___absolutePath
    childMdx___frontmatter___image___accessTime
    childMdx___frontmatter___image___atime
    childMdx___frontmatter___image___atimeMs
    childMdx___frontmatter___image___base
    childMdx___frontmatter___image___birthTime
    childMdx___frontmatter___image___birthtime
    childMdx___frontmatter___image___birthtimeMs
    childMdx___frontmatter___image___blksize
    childMdx___frontmatter___image___blocks
    childMdx___frontmatter___image___changeTime
    childMdx___frontmatter___image___children
    childMdx___frontmatter___image___childrenImageSharp
    childMdx___frontmatter___image___childrenMdx
    childMdx___frontmatter___image___childrenTranslationsJson
    childMdx___frontmatter___image___ctime
    childMdx___frontmatter___image___ctimeMs
    childMdx___frontmatter___image___dev
    childMdx___frontmatter___image___dir
    childMdx___frontmatter___image___ext
    childMdx___frontmatter___image___extension
    childMdx___frontmatter___image___gid
    childMdx___frontmatter___image___id
    childMdx___frontmatter___image___ino
    childMdx___frontmatter___image___mode
    childMdx___frontmatter___image___modifiedTime
    childMdx___frontmatter___image___mtime
    childMdx___frontmatter___image___mtimeMs
    childMdx___frontmatter___image___name
    childMdx___frontmatter___image___nlink
    childMdx___frontmatter___image___prettySize
    childMdx___frontmatter___image___publicURL
    childMdx___frontmatter___image___rdev
    childMdx___frontmatter___image___relativeDirectory
    childMdx___frontmatter___image___relativePath
    childMdx___frontmatter___image___root
    childMdx___frontmatter___image___size
    childMdx___frontmatter___image___sourceInstanceName
    childMdx___frontmatter___image___uid
    childMdx___frontmatter___published
    childMdx___frontmatter___title
    childMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___html
    childMdx___id
    childMdx___internal___content
    childMdx___internal___contentDigest
    childMdx___internal___description
    childMdx___internal___fieldOwners
    childMdx___internal___ignoreType
    childMdx___internal___mediaType
    childMdx___internal___owner
    childMdx___internal___type
    childMdx___mdxAST
    childMdx___parent___children
    childMdx___parent___children___children
    childMdx___parent___children___id
    childMdx___parent___id
    childMdx___parent___internal___content
    childMdx___parent___internal___contentDigest
    childMdx___parent___internal___description
    childMdx___parent___internal___fieldOwners
    childMdx___parent___internal___ignoreType
    childMdx___parent___internal___mediaType
    childMdx___parent___internal___owner
    childMdx___parent___internal___type
    childMdx___parent___parent___children
    childMdx___parent___parent___id
    childMdx___rawBody
    childMdx___slug
    childMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___timeToRead
    childMdx___wordCount___paragraphs
    childMdx___wordCount___sentences
    childMdx___wordCount___words
    childTranslationsJson___about_me
    childTranslationsJson___about_me_description
    childTranslationsJson___and_i_build
    childTranslationsJson___author
    childTranslationsJson___battleship_description
    childTranslationsJson___children
    childTranslationsJson___children___children
    childTranslationsJson___children___children___children
    childTranslationsJson___children___children___id
    childTranslationsJson___children___id
    childTranslationsJson___children___internal___content
    childTranslationsJson___children___internal___contentDigest
    childTranslationsJson___children___internal___description
    childTranslationsJson___children___internal___fieldOwners
    childTranslationsJson___children___internal___ignoreType
    childTranslationsJson___children___internal___mediaType
    childTranslationsJson___children___internal___owner
    childTranslationsJson___children___internal___type
    childTranslationsJson___children___parent___children
    childTranslationsJson___children___parent___id
    childTranslationsJson___code_samples
    childTranslationsJson___ctbook_description
    childTranslationsJson___ctbook_readsample
    childTranslationsJson___cv_link
    childTranslationsJson___download_cv
    childTranslationsJson___ecommerce_websites
    childTranslationsJson___edit_posts_on_github
    childTranslationsJson___hi_my_name_is
    childTranslationsJson___id
    childTranslationsJson___internal___content
    childTranslationsJson___internal___contentDigest
    childTranslationsJson___internal___description
    childTranslationsJson___internal___fieldOwners
    childTranslationsJson___internal___ignoreType
    childTranslationsJson___internal___mediaType
    childTranslationsJson___internal___owner
    childTranslationsJson___internal___type
    childTranslationsJson___landing_pages
    childTranslationsJson___mobile_and_web_projects
    childTranslationsJson___mobile_applications
    childTranslationsJson___my_stack
    childTranslationsJson___my_stack_backend
    childTranslationsJson___my_stack_frontend
    childTranslationsJson___my_stack_sysops
    childTranslationsJson___parent___children
    childTranslationsJson___parent___children___children
    childTranslationsJson___parent___children___id
    childTranslationsJson___parent___id
    childTranslationsJson___parent___internal___content
    childTranslationsJson___parent___internal___contentDigest
    childTranslationsJson___parent___internal___description
    childTranslationsJson___parent___internal___fieldOwners
    childTranslationsJson___parent___internal___ignoreType
    childTranslationsJson___parent___internal___mediaType
    childTranslationsJson___parent___internal___owner
    childTranslationsJson___parent___internal___type
    childTranslationsJson___parent___parent___children
    childTranslationsJson___parent___parent___id
    childTranslationsJson___personal_projects_httpixel
    childTranslationsJson___personal_projects_pills
    childTranslationsJson___powered_by_gatsby
    childTranslationsJson___projects
    childTranslationsJson___roomie_description
    childTranslationsJson___software_engineer
    childTranslationsJson___web_applications
    childTranslationsJson___what_i_do
    childTranslationsJson___what_i_do_backend
    childTranslationsJson___what_i_do_frontend
    childTranslationsJson___what_i_do_mobile
    childTranslationsJson___what_i_do_sysops
    childTranslationsJson___who_am_i
    childTranslationsJson___written_by
    children
    childrenImageSharp
    childrenImageSharp___children
    childrenImageSharp___children___children
    childrenImageSharp___children___children___children
    childrenImageSharp___children___children___id
    childrenImageSharp___children___id
    childrenImageSharp___children___internal___content
    childrenImageSharp___children___internal___contentDigest
    childrenImageSharp___children___internal___description
    childrenImageSharp___children___internal___fieldOwners
    childrenImageSharp___children___internal___ignoreType
    childrenImageSharp___children___internal___mediaType
    childrenImageSharp___children___internal___owner
    childrenImageSharp___children___internal___type
    childrenImageSharp___children___parent___children
    childrenImageSharp___children___parent___id
    childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id
    childrenImageSharp___internal___content
    childrenImageSharp___internal___contentDigest
    childrenImageSharp___internal___description
    childrenImageSharp___internal___fieldOwners
    childrenImageSharp___internal___ignoreType
    childrenImageSharp___internal___mediaType
    childrenImageSharp___internal___owner
    childrenImageSharp___internal___type
    childrenImageSharp___original___height
    childrenImageSharp___original___src
    childrenImageSharp___original___width
    childrenImageSharp___parent___children
    childrenImageSharp___parent___children___children
    childrenImageSharp___parent___children___id
    childrenImageSharp___parent___id
    childrenImageSharp___parent___internal___content
    childrenImageSharp___parent___internal___contentDigest
    childrenImageSharp___parent___internal___description
    childrenImageSharp___parent___internal___fieldOwners
    childrenImageSharp___parent___internal___ignoreType
    childrenImageSharp___parent___internal___mediaType
    childrenImageSharp___parent___internal___owner
    childrenImageSharp___parent___internal___type
    childrenImageSharp___parent___parent___children
    childrenImageSharp___parent___parent___id
    childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx
    childrenMdx___body
    childrenMdx___children
    childrenMdx___children___children
    childrenMdx___children___children___children
    childrenMdx___children___children___id
    childrenMdx___children___id
    childrenMdx___children___internal___content
    childrenMdx___children___internal___contentDigest
    childrenMdx___children___internal___description
    childrenMdx___children___internal___fieldOwners
    childrenMdx___children___internal___ignoreType
    childrenMdx___children___internal___mediaType
    childrenMdx___children___internal___owner
    childrenMdx___children___internal___type
    childrenMdx___children___parent___children
    childrenMdx___children___parent___id
    childrenMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___fields___isDefault
    childrenMdx___fields___locale
    childrenMdx___fileAbsolutePath
    childrenMdx___frontmatter___date
    childrenMdx___frontmatter___description
    childrenMdx___frontmatter___embeddedImagesLocal
    childrenMdx___frontmatter___embeddedImagesLocal___absolutePath
    childrenMdx___frontmatter___embeddedImagesLocal___accessTime
    childrenMdx___frontmatter___embeddedImagesLocal___atime
    childrenMdx___frontmatter___embeddedImagesLocal___atimeMs
    childrenMdx___frontmatter___embeddedImagesLocal___base
    childrenMdx___frontmatter___embeddedImagesLocal___birthTime
    childrenMdx___frontmatter___embeddedImagesLocal___birthtime
    childrenMdx___frontmatter___embeddedImagesLocal___birthtimeMs
    childrenMdx___frontmatter___embeddedImagesLocal___blksize
    childrenMdx___frontmatter___embeddedImagesLocal___blocks
    childrenMdx___frontmatter___embeddedImagesLocal___changeTime
    childrenMdx___frontmatter___embeddedImagesLocal___children
    childrenMdx___frontmatter___embeddedImagesLocal___childrenImageSharp
    childrenMdx___frontmatter___embeddedImagesLocal___childrenMdx
    childrenMdx___frontmatter___embeddedImagesLocal___childrenTranslationsJson
    childrenMdx___frontmatter___embeddedImagesLocal___ctime
    childrenMdx___frontmatter___embeddedImagesLocal___ctimeMs
    childrenMdx___frontmatter___embeddedImagesLocal___dev
    childrenMdx___frontmatter___embeddedImagesLocal___dir
    childrenMdx___frontmatter___embeddedImagesLocal___ext
    childrenMdx___frontmatter___embeddedImagesLocal___extension
    childrenMdx___frontmatter___embeddedImagesLocal___gid
    childrenMdx___frontmatter___embeddedImagesLocal___id
    childrenMdx___frontmatter___embeddedImagesLocal___ino
    childrenMdx___frontmatter___embeddedImagesLocal___mode
    childrenMdx___frontmatter___embeddedImagesLocal___modifiedTime
    childrenMdx___frontmatter___embeddedImagesLocal___mtime
    childrenMdx___frontmatter___embeddedImagesLocal___mtimeMs
    childrenMdx___frontmatter___embeddedImagesLocal___name
    childrenMdx___frontmatter___embeddedImagesLocal___nlink
    childrenMdx___frontmatter___embeddedImagesLocal___prettySize
    childrenMdx___frontmatter___embeddedImagesLocal___publicURL
    childrenMdx___frontmatter___embeddedImagesLocal___rdev
    childrenMdx___frontmatter___embeddedImagesLocal___relativeDirectory
    childrenMdx___frontmatter___embeddedImagesLocal___relativePath
    childrenMdx___frontmatter___embeddedImagesLocal___root
    childrenMdx___frontmatter___embeddedImagesLocal___size
    childrenMdx___frontmatter___embeddedImagesLocal___sourceInstanceName
    childrenMdx___frontmatter___embeddedImagesLocal___uid
    childrenMdx___frontmatter___imageAlt
    childrenMdx___frontmatter___imageCover
    childrenMdx___frontmatter___image___absolutePath
    childrenMdx___frontmatter___image___accessTime
    childrenMdx___frontmatter___image___atime
    childrenMdx___frontmatter___image___atimeMs
    childrenMdx___frontmatter___image___base
    childrenMdx___frontmatter___image___birthTime
    childrenMdx___frontmatter___image___birthtime
    childrenMdx___frontmatter___image___birthtimeMs
    childrenMdx___frontmatter___image___blksize
    childrenMdx___frontmatter___image___blocks
    childrenMdx___frontmatter___image___changeTime
    childrenMdx___frontmatter___image___children
    childrenMdx___frontmatter___image___childrenImageSharp
    childrenMdx___frontmatter___image___childrenMdx
    childrenMdx___frontmatter___image___childrenTranslationsJson
    childrenMdx___frontmatter___image___ctime
    childrenMdx___frontmatter___image___ctimeMs
    childrenMdx___frontmatter___image___dev
    childrenMdx___frontmatter___image___dir
    childrenMdx___frontmatter___image___ext
    childrenMdx___frontmatter___image___extension
    childrenMdx___frontmatter___image___gid
    childrenMdx___frontmatter___image___id
    childrenMdx___frontmatter___image___ino
    childrenMdx___frontmatter___image___mode
    childrenMdx___frontmatter___image___modifiedTime
    childrenMdx___frontmatter___image___mtime
    childrenMdx___frontmatter___image___mtimeMs
    childrenMdx___frontmatter___image___name
    childrenMdx___frontmatter___image___nlink
    childrenMdx___frontmatter___image___prettySize
    childrenMdx___frontmatter___image___publicURL
    childrenMdx___frontmatter___image___rdev
    childrenMdx___frontmatter___image___relativeDirectory
    childrenMdx___frontmatter___image___relativePath
    childrenMdx___frontmatter___image___root
    childrenMdx___frontmatter___image___size
    childrenMdx___frontmatter___image___sourceInstanceName
    childrenMdx___frontmatter___image___uid
    childrenMdx___frontmatter___published
    childrenMdx___frontmatter___title
    childrenMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___html
    childrenMdx___id
    childrenMdx___internal___content
    childrenMdx___internal___contentDigest
    childrenMdx___internal___description
    childrenMdx___internal___fieldOwners
    childrenMdx___internal___ignoreType
    childrenMdx___internal___mediaType
    childrenMdx___internal___owner
    childrenMdx___internal___type
    childrenMdx___mdxAST
    childrenMdx___parent___children
    childrenMdx___parent___children___children
    childrenMdx___parent___children___id
    childrenMdx___parent___id
    childrenMdx___parent___internal___content
    childrenMdx___parent___internal___contentDigest
    childrenMdx___parent___internal___description
    childrenMdx___parent___internal___fieldOwners
    childrenMdx___parent___internal___ignoreType
    childrenMdx___parent___internal___mediaType
    childrenMdx___parent___internal___owner
    childrenMdx___parent___internal___type
    childrenMdx___parent___parent___children
    childrenMdx___parent___parent___id
    childrenMdx___rawBody
    childrenMdx___slug
    childrenMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___timeToRead
    childrenMdx___wordCount___paragraphs
    childrenMdx___wordCount___sentences
    childrenMdx___wordCount___words
    childrenTranslationsJson
    childrenTranslationsJson___about_me
    childrenTranslationsJson___about_me_description
    childrenTranslationsJson___and_i_build
    childrenTranslationsJson___author
    childrenTranslationsJson___battleship_description
    childrenTranslationsJson___children
    childrenTranslationsJson___children___children
    childrenTranslationsJson___children___children___children
    childrenTranslationsJson___children___children___id
    childrenTranslationsJson___children___id
    childrenTranslationsJson___children___internal___content
    childrenTranslationsJson___children___internal___contentDigest
    childrenTranslationsJson___children___internal___description
    childrenTranslationsJson___children___internal___fieldOwners
    childrenTranslationsJson___children___internal___ignoreType
    childrenTranslationsJson___children___internal___mediaType
    childrenTranslationsJson___children___internal___owner
    childrenTranslationsJson___children___internal___type
    childrenTranslationsJson___children___parent___children
    childrenTranslationsJson___children___parent___id
    childrenTranslationsJson___code_samples
    childrenTranslationsJson___ctbook_description
    childrenTranslationsJson___ctbook_readsample
    childrenTranslationsJson___cv_link
    childrenTranslationsJson___download_cv
    childrenTranslationsJson___ecommerce_websites
    childrenTranslationsJson___edit_posts_on_github
    childrenTranslationsJson___hi_my_name_is
    childrenTranslationsJson___id
    childrenTranslationsJson___internal___content
    childrenTranslationsJson___internal___contentDigest
    childrenTranslationsJson___internal___description
    childrenTranslationsJson___internal___fieldOwners
    childrenTranslationsJson___internal___ignoreType
    childrenTranslationsJson___internal___mediaType
    childrenTranslationsJson___internal___owner
    childrenTranslationsJson___internal___type
    childrenTranslationsJson___landing_pages
    childrenTranslationsJson___mobile_and_web_projects
    childrenTranslationsJson___mobile_applications
    childrenTranslationsJson___my_stack
    childrenTranslationsJson___my_stack_backend
    childrenTranslationsJson___my_stack_frontend
    childrenTranslationsJson___my_stack_sysops
    childrenTranslationsJson___parent___children
    childrenTranslationsJson___parent___children___children
    childrenTranslationsJson___parent___children___id
    childrenTranslationsJson___parent___id
    childrenTranslationsJson___parent___internal___content
    childrenTranslationsJson___parent___internal___contentDigest
    childrenTranslationsJson___parent___internal___description
    childrenTranslationsJson___parent___internal___fieldOwners
    childrenTranslationsJson___parent___internal___ignoreType
    childrenTranslationsJson___parent___internal___mediaType
    childrenTranslationsJson___parent___internal___owner
    childrenTranslationsJson___parent___internal___type
    childrenTranslationsJson___parent___parent___children
    childrenTranslationsJson___parent___parent___id
    childrenTranslationsJson___personal_projects_httpixel
    childrenTranslationsJson___personal_projects_pills
    childrenTranslationsJson___powered_by_gatsby
    childrenTranslationsJson___projects
    childrenTranslationsJson___roomie_description
    childrenTranslationsJson___software_engineer
    childrenTranslationsJson___web_applications
    childrenTranslationsJson___what_i_do
    childrenTranslationsJson___what_i_do_backend
    childrenTranslationsJson___what_i_do_frontend
    childrenTranslationsJson___what_i_do_mobile
    childrenTranslationsJson___what_i_do_sysops
    childrenTranslationsJson___who_am_i
    childrenTranslationsJson___written_by
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum GatsbyImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum GatsbyImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum GatsbyImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum HeadingsMdx {
    h1
    h2
    h3
    h4
    h5
    h6
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    original___height
    original___src
    original___width
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MdxFieldsEnum {
    body
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fields___isDefault
    fields___locale
    fileAbsolutePath
    frontmatter___date
    frontmatter___description
    frontmatter___embeddedImagesLocal
    frontmatter___embeddedImagesLocal___absolutePath
    frontmatter___embeddedImagesLocal___accessTime
    frontmatter___embeddedImagesLocal___atime
    frontmatter___embeddedImagesLocal___atimeMs
    frontmatter___embeddedImagesLocal___base
    frontmatter___embeddedImagesLocal___birthTime
    frontmatter___embeddedImagesLocal___birthtime
    frontmatter___embeddedImagesLocal___birthtimeMs
    frontmatter___embeddedImagesLocal___blksize
    frontmatter___embeddedImagesLocal___blocks
    frontmatter___embeddedImagesLocal___changeTime
    frontmatter___embeddedImagesLocal___childImageSharp___children
    frontmatter___embeddedImagesLocal___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childImageSharp___id
    frontmatter___embeddedImagesLocal___childMdx___body
    frontmatter___embeddedImagesLocal___childMdx___children
    frontmatter___embeddedImagesLocal___childMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childMdx___fileAbsolutePath
    frontmatter___embeddedImagesLocal___childMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childMdx___html
    frontmatter___embeddedImagesLocal___childMdx___id
    frontmatter___embeddedImagesLocal___childMdx___mdxAST
    frontmatter___embeddedImagesLocal___childMdx___rawBody
    frontmatter___embeddedImagesLocal___childMdx___slug
    frontmatter___embeddedImagesLocal___childMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childMdx___timeToRead
    frontmatter___embeddedImagesLocal___childTranslationsJson___about_me
    frontmatter___embeddedImagesLocal___childTranslationsJson___about_me_description
    frontmatter___embeddedImagesLocal___childTranslationsJson___and_i_build
    frontmatter___embeddedImagesLocal___childTranslationsJson___author
    frontmatter___embeddedImagesLocal___childTranslationsJson___battleship_description
    frontmatter___embeddedImagesLocal___childTranslationsJson___children
    frontmatter___embeddedImagesLocal___childTranslationsJson___code_samples
    frontmatter___embeddedImagesLocal___childTranslationsJson___ctbook_description
    frontmatter___embeddedImagesLocal___childTranslationsJson___ctbook_readsample
    frontmatter___embeddedImagesLocal___childTranslationsJson___cv_link
    frontmatter___embeddedImagesLocal___childTranslationsJson___download_cv
    frontmatter___embeddedImagesLocal___childTranslationsJson___ecommerce_websites
    frontmatter___embeddedImagesLocal___childTranslationsJson___edit_posts_on_github
    frontmatter___embeddedImagesLocal___childTranslationsJson___hi_my_name_is
    frontmatter___embeddedImagesLocal___childTranslationsJson___id
    frontmatter___embeddedImagesLocal___childTranslationsJson___landing_pages
    frontmatter___embeddedImagesLocal___childTranslationsJson___mobile_and_web_projects
    frontmatter___embeddedImagesLocal___childTranslationsJson___mobile_applications
    frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack
    frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack_backend
    frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack_frontend
    frontmatter___embeddedImagesLocal___childTranslationsJson___my_stack_sysops
    frontmatter___embeddedImagesLocal___childTranslationsJson___personal_projects_httpixel
    frontmatter___embeddedImagesLocal___childTranslationsJson___personal_projects_pills
    frontmatter___embeddedImagesLocal___childTranslationsJson___powered_by_gatsby
    frontmatter___embeddedImagesLocal___childTranslationsJson___projects
    frontmatter___embeddedImagesLocal___childTranslationsJson___roomie_description
    frontmatter___embeddedImagesLocal___childTranslationsJson___software_engineer
    frontmatter___embeddedImagesLocal___childTranslationsJson___web_applications
    frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do
    frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_backend
    frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_frontend
    frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_mobile
    frontmatter___embeddedImagesLocal___childTranslationsJson___what_i_do_sysops
    frontmatter___embeddedImagesLocal___childTranslationsJson___who_am_i
    frontmatter___embeddedImagesLocal___childTranslationsJson___written_by
    frontmatter___embeddedImagesLocal___children
    frontmatter___embeddedImagesLocal___childrenImageSharp
    frontmatter___embeddedImagesLocal___childrenImageSharp___children
    frontmatter___embeddedImagesLocal___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childrenImageSharp___id
    frontmatter___embeddedImagesLocal___childrenMdx
    frontmatter___embeddedImagesLocal___childrenMdx___body
    frontmatter___embeddedImagesLocal___childrenMdx___children
    frontmatter___embeddedImagesLocal___childrenMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childrenMdx___fileAbsolutePath
    frontmatter___embeddedImagesLocal___childrenMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childrenMdx___html
    frontmatter___embeddedImagesLocal___childrenMdx___id
    frontmatter___embeddedImagesLocal___childrenMdx___mdxAST
    frontmatter___embeddedImagesLocal___childrenMdx___rawBody
    frontmatter___embeddedImagesLocal___childrenMdx___slug
    frontmatter___embeddedImagesLocal___childrenMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___embeddedImagesLocal___childrenMdx___timeToRead
    frontmatter___embeddedImagesLocal___childrenTranslationsJson
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___about_me
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___about_me_description
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___and_i_build
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___author
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___battleship_description
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___children
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___code_samples
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___ctbook_description
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___ctbook_readsample
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___cv_link
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___download_cv
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___ecommerce_websites
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___edit_posts_on_github
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___hi_my_name_is
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___id
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___landing_pages
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___mobile_and_web_projects
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___mobile_applications
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack_backend
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack_frontend
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___my_stack_sysops
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___personal_projects_httpixel
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___personal_projects_pills
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___powered_by_gatsby
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___projects
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___roomie_description
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___software_engineer
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___web_applications
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_backend
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_frontend
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_mobile
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___what_i_do_sysops
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___who_am_i
    frontmatter___embeddedImagesLocal___childrenTranslationsJson___written_by
    frontmatter___embeddedImagesLocal___children___children
    frontmatter___embeddedImagesLocal___children___id
    frontmatter___embeddedImagesLocal___ctime
    frontmatter___embeddedImagesLocal___ctimeMs
    frontmatter___embeddedImagesLocal___dev
    frontmatter___embeddedImagesLocal___dir
    frontmatter___embeddedImagesLocal___ext
    frontmatter___embeddedImagesLocal___extension
    frontmatter___embeddedImagesLocal___gid
    frontmatter___embeddedImagesLocal___id
    frontmatter___embeddedImagesLocal___ino
    frontmatter___embeddedImagesLocal___internal___content
    frontmatter___embeddedImagesLocal___internal___contentDigest
    frontmatter___embeddedImagesLocal___internal___description
    frontmatter___embeddedImagesLocal___internal___fieldOwners
    frontmatter___embeddedImagesLocal___internal___ignoreType
    frontmatter___embeddedImagesLocal___internal___mediaType
    frontmatter___embeddedImagesLocal___internal___owner
    frontmatter___embeddedImagesLocal___internal___type
    frontmatter___embeddedImagesLocal___mode
    frontmatter___embeddedImagesLocal___modifiedTime
    frontmatter___embeddedImagesLocal___mtime
    frontmatter___embeddedImagesLocal___mtimeMs
    frontmatter___embeddedImagesLocal___name
    frontmatter___embeddedImagesLocal___nlink
    frontmatter___embeddedImagesLocal___parent___children
    frontmatter___embeddedImagesLocal___parent___id
    frontmatter___embeddedImagesLocal___prettySize
    frontmatter___embeddedImagesLocal___publicURL
    frontmatter___embeddedImagesLocal___rdev
    frontmatter___embeddedImagesLocal___relativeDirectory
    frontmatter___embeddedImagesLocal___relativePath
    frontmatter___embeddedImagesLocal___root
    frontmatter___embeddedImagesLocal___size
    frontmatter___embeddedImagesLocal___sourceInstanceName
    frontmatter___embeddedImagesLocal___uid
    frontmatter___imageAlt
    frontmatter___imageCover
    frontmatter___image___absolutePath
    frontmatter___image___accessTime
    frontmatter___image___atime
    frontmatter___image___atimeMs
    frontmatter___image___base
    frontmatter___image___birthTime
    frontmatter___image___birthtime
    frontmatter___image___birthtimeMs
    frontmatter___image___blksize
    frontmatter___image___blocks
    frontmatter___image___changeTime
    frontmatter___image___childImageSharp___children
    frontmatter___image___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childImageSharp___id
    frontmatter___image___childMdx___body
    frontmatter___image___childMdx___children
    frontmatter___image___childMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childMdx___fileAbsolutePath
    frontmatter___image___childMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childMdx___html
    frontmatter___image___childMdx___id
    frontmatter___image___childMdx___mdxAST
    frontmatter___image___childMdx___rawBody
    frontmatter___image___childMdx___slug
    frontmatter___image___childMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childMdx___timeToRead
    frontmatter___image___childTranslationsJson___about_me
    frontmatter___image___childTranslationsJson___about_me_description
    frontmatter___image___childTranslationsJson___and_i_build
    frontmatter___image___childTranslationsJson___author
    frontmatter___image___childTranslationsJson___battleship_description
    frontmatter___image___childTranslationsJson___children
    frontmatter___image___childTranslationsJson___code_samples
    frontmatter___image___childTranslationsJson___ctbook_description
    frontmatter___image___childTranslationsJson___ctbook_readsample
    frontmatter___image___childTranslationsJson___cv_link
    frontmatter___image___childTranslationsJson___download_cv
    frontmatter___image___childTranslationsJson___ecommerce_websites
    frontmatter___image___childTranslationsJson___edit_posts_on_github
    frontmatter___image___childTranslationsJson___hi_my_name_is
    frontmatter___image___childTranslationsJson___id
    frontmatter___image___childTranslationsJson___landing_pages
    frontmatter___image___childTranslationsJson___mobile_and_web_projects
    frontmatter___image___childTranslationsJson___mobile_applications
    frontmatter___image___childTranslationsJson___my_stack
    frontmatter___image___childTranslationsJson___my_stack_backend
    frontmatter___image___childTranslationsJson___my_stack_frontend
    frontmatter___image___childTranslationsJson___my_stack_sysops
    frontmatter___image___childTranslationsJson___personal_projects_httpixel
    frontmatter___image___childTranslationsJson___personal_projects_pills
    frontmatter___image___childTranslationsJson___powered_by_gatsby
    frontmatter___image___childTranslationsJson___projects
    frontmatter___image___childTranslationsJson___roomie_description
    frontmatter___image___childTranslationsJson___software_engineer
    frontmatter___image___childTranslationsJson___web_applications
    frontmatter___image___childTranslationsJson___what_i_do
    frontmatter___image___childTranslationsJson___what_i_do_backend
    frontmatter___image___childTranslationsJson___what_i_do_frontend
    frontmatter___image___childTranslationsJson___what_i_do_mobile
    frontmatter___image___childTranslationsJson___what_i_do_sysops
    frontmatter___image___childTranslationsJson___who_am_i
    frontmatter___image___childTranslationsJson___written_by
    frontmatter___image___children
    frontmatter___image___childrenImageSharp
    frontmatter___image___childrenImageSharp___children
    frontmatter___image___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childrenImageSharp___id
    frontmatter___image___childrenMdx
    frontmatter___image___childrenMdx___body
    frontmatter___image___childrenMdx___children
    frontmatter___image___childrenMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childrenMdx___fileAbsolutePath
    frontmatter___image___childrenMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childrenMdx___html
    frontmatter___image___childrenMdx___id
    frontmatter___image___childrenMdx___mdxAST
    frontmatter___image___childrenMdx___rawBody
    frontmatter___image___childrenMdx___slug
    frontmatter___image___childrenMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___image___childrenMdx___timeToRead
    frontmatter___image___childrenTranslationsJson
    frontmatter___image___childrenTranslationsJson___about_me
    frontmatter___image___childrenTranslationsJson___about_me_description
    frontmatter___image___childrenTranslationsJson___and_i_build
    frontmatter___image___childrenTranslationsJson___author
    frontmatter___image___childrenTranslationsJson___battleship_description
    frontmatter___image___childrenTranslationsJson___children
    frontmatter___image___childrenTranslationsJson___code_samples
    frontmatter___image___childrenTranslationsJson___ctbook_description
    frontmatter___image___childrenTranslationsJson___ctbook_readsample
    frontmatter___image___childrenTranslationsJson___cv_link
    frontmatter___image___childrenTranslationsJson___download_cv
    frontmatter___image___childrenTranslationsJson___ecommerce_websites
    frontmatter___image___childrenTranslationsJson___edit_posts_on_github
    frontmatter___image___childrenTranslationsJson___hi_my_name_is
    frontmatter___image___childrenTranslationsJson___id
    frontmatter___image___childrenTranslationsJson___landing_pages
    frontmatter___image___childrenTranslationsJson___mobile_and_web_projects
    frontmatter___image___childrenTranslationsJson___mobile_applications
    frontmatter___image___childrenTranslationsJson___my_stack
    frontmatter___image___childrenTranslationsJson___my_stack_backend
    frontmatter___image___childrenTranslationsJson___my_stack_frontend
    frontmatter___image___childrenTranslationsJson___my_stack_sysops
    frontmatter___image___childrenTranslationsJson___personal_projects_httpixel
    frontmatter___image___childrenTranslationsJson___personal_projects_pills
    frontmatter___image___childrenTranslationsJson___powered_by_gatsby
    frontmatter___image___childrenTranslationsJson___projects
    frontmatter___image___childrenTranslationsJson___roomie_description
    frontmatter___image___childrenTranslationsJson___software_engineer
    frontmatter___image___childrenTranslationsJson___web_applications
    frontmatter___image___childrenTranslationsJson___what_i_do
    frontmatter___image___childrenTranslationsJson___what_i_do_backend
    frontmatter___image___childrenTranslationsJson___what_i_do_frontend
    frontmatter___image___childrenTranslationsJson___what_i_do_mobile
    frontmatter___image___childrenTranslationsJson___what_i_do_sysops
    frontmatter___image___childrenTranslationsJson___who_am_i
    frontmatter___image___childrenTranslationsJson___written_by
    frontmatter___image___children___children
    frontmatter___image___children___id
    frontmatter___image___ctime
    frontmatter___image___ctimeMs
    frontmatter___image___dev
    frontmatter___image___dir
    frontmatter___image___ext
    frontmatter___image___extension
    frontmatter___image___gid
    frontmatter___image___id
    frontmatter___image___ino
    frontmatter___image___internal___content
    frontmatter___image___internal___contentDigest
    frontmatter___image___internal___description
    frontmatter___image___internal___fieldOwners
    frontmatter___image___internal___ignoreType
    frontmatter___image___internal___mediaType
    frontmatter___image___internal___owner
    frontmatter___image___internal___type
    frontmatter___image___mode
    frontmatter___image___modifiedTime
    frontmatter___image___mtime
    frontmatter___image___mtimeMs
    frontmatter___image___name
    frontmatter___image___nlink
    frontmatter___image___parent___children
    frontmatter___image___parent___id
    frontmatter___image___prettySize
    frontmatter___image___publicURL
    frontmatter___image___rdev
    frontmatter___image___relativeDirectory
    frontmatter___image___relativePath
    frontmatter___image___root
    frontmatter___image___size
    frontmatter___image___sourceInstanceName
    frontmatter___image___uid
    frontmatter___published
    frontmatter___title
    headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    html
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mdxAST
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    rawBody
    slug
    tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    timeToRead
    wordCount___paragraphs
    wordCount___sentences
    wordCount___words
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    jsxRuntime
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___author
    siteMetadata___description
    siteMetadata___siteUrl
    siteMetadata___title
    trailingSlash
}

enum SiteFunctionFieldsEnum {
    absoluteCompiledFilePath
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    functionRoute
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    originalAbsoluteFilePath
    originalRelativeFilePath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginName
    relativeCompiledFilePath
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    pageContext
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

enum StaticImageFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum TranslationsJsonFieldsEnum {
    about_me
    about_me_description
    and_i_build
    author
    battleship_description
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    code_samples
    ctbook_description
    ctbook_readsample
    cv_link
    download_cv
    ecommerce_websites
    edit_posts_on_github
    hi_my_name_is
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    landing_pages
    mobile_and_web_projects
    mobile_applications
    my_stack
    my_stack_backend
    my_stack_frontend
    my_stack_sysops
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    personal_projects_httpixel
    personal_projects_pills
    powered_by_gatsby
    projects
    roomie_description
    software_engineer
    web_applications
    what_i_do
    what_i_do_backend
    what_i_do_frontend
    what_i_do_mobile
    what_i_do_sysops
    who_am_i
    written_by
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    childMdx: MdxFilterInput
    childTranslationsJson: TranslationsJsonFilterInput
    children: NodeFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    childrenMdx: MdxFilterListInput
    childrenTranslationsJson: TranslationsJsonFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileFilterListInput {
    elemMatch: FileFilterInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input MdxFieldsFilterInput {
    isDefault: BooleanQueryOperatorInput
    locale: StringQueryOperatorInput
}

input MdxFilterInput {
    body: StringQueryOperatorInput
    children: NodeFilterListInput
    excerpt: StringQueryOperatorInput
    fields: MdxFieldsFilterInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MdxFrontmatterFilterInput
    headings: MdxHeadingMdxFilterListInput
    html: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    mdxAST: JSONQueryOperatorInput
    parent: NodeFilterInput
    rawBody: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    tableOfContents: JSONQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MdxWordCountFilterInput
}

input MdxFilterListInput {
    elemMatch: MdxFilterInput
}

input MdxFrontmatterFilterInput {
    date: DateQueryOperatorInput
    description: StringQueryOperatorInput
    embeddedImagesLocal: FileFilterListInput
    image: FileFilterInput
    imageAlt: StringQueryOperatorInput
    imageCover: StringQueryOperatorInput
    published: BooleanQueryOperatorInput
    title: StringQueryOperatorInput
}

input MdxHeadingMdxFilterInput {
    depth: IntQueryOperatorInput
    value: StringQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
    elemMatch: MdxHeadingMdxFilterInput
}

input MdxSortInput {
    fields: [MdxFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input MdxWordCountFilterInput {
    paragraphs: IntQueryOperatorInput
    sentences: IntQueryOperatorInput
    words: IntQueryOperatorInput
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    jsxRuntime: StringQueryOperatorInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
    trailingSlash: StringQueryOperatorInput
}

input SiteFunctionFilterInput {
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
    fields: [SiteFunctionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    author: StringQueryOperatorInput
    description: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StaticImageFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    id: StringQueryOperatorInput
    ino: IntQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input StaticImageSortInput {
    fields: [StaticImageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input TranslationsJsonFilterInput {
    about_me: StringQueryOperatorInput
    about_me_description: StringQueryOperatorInput
    and_i_build: StringQueryOperatorInput
    author: StringQueryOperatorInput
    battleship_description: StringQueryOperatorInput
    children: NodeFilterListInput
    code_samples: StringQueryOperatorInput
    ctbook_description: StringQueryOperatorInput
    ctbook_readsample: StringQueryOperatorInput
    cv_link: StringQueryOperatorInput
    download_cv: StringQueryOperatorInput
    ecommerce_websites: StringQueryOperatorInput
    edit_posts_on_github: StringQueryOperatorInput
    hi_my_name_is: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    landing_pages: StringQueryOperatorInput
    mobile_and_web_projects: StringQueryOperatorInput
    mobile_applications: StringQueryOperatorInput
    my_stack: StringQueryOperatorInput
    my_stack_backend: StringQueryOperatorInput
    my_stack_frontend: StringQueryOperatorInput
    my_stack_sysops: StringQueryOperatorInput
    parent: NodeFilterInput
    personal_projects_httpixel: StringQueryOperatorInput
    personal_projects_pills: StringQueryOperatorInput
    powered_by_gatsby: StringQueryOperatorInput
    projects: StringQueryOperatorInput
    roomie_description: StringQueryOperatorInput
    software_engineer: StringQueryOperatorInput
    web_applications: StringQueryOperatorInput
    what_i_do: StringQueryOperatorInput
    what_i_do_backend: StringQueryOperatorInput
    what_i_do_frontend: StringQueryOperatorInput
    what_i_do_mobile: StringQueryOperatorInput
    what_i_do_sysops: StringQueryOperatorInput
    who_am_i: StringQueryOperatorInput
    written_by: StringQueryOperatorInput
}

input TranslationsJsonFilterListInput {
    elemMatch: TranslationsJsonFilterInput
}

input TranslationsJsonSortInput {
    fields: [TranslationsJsonFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input WebPOptions {
    quality: Int
}
